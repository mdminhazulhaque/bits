<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://bits.mdminhazulhaque.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://bits.mdminhazulhaque.io/" rel="alternate" type="text/html" /><updated>2022-05-13T22:07:16+06:00</updated><id>https://bits.mdminhazulhaque.io/feed.xml</id><title type="html">Bits</title><subtitle>Random posts written by &lt;a href=&quot;https://mdminhazulhaque.io&quot;&gt;Minhaz&lt;/a&gt;</subtitle><entry><title type="html">Dell Latitude 5300 Fingerprint Sensor on Ubuntu</title><link href="https://bits.mdminhazulhaque.io/linux/dell-latitude-5300-fingerprint-sensor-on-ubuntu.html" rel="alternate" type="text/html" title="Dell Latitude 5300 Fingerprint Sensor on Ubuntu" /><published>2022-05-13T00:00:00+06:00</published><updated>2022-05-13T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/linux/dell-latitude-5300-fingerprint-sensor-on-ubuntu</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/linux/dell-latitude-5300-fingerprint-sensor-on-ubuntu.html"><![CDATA[<p>After struggling for several months, I have finally been able to make the fingerprint sensor on my <strong>Dell Latitude 5300</strong> laptop work on Ubuntu. The steps were pretty simple. I have no idea why never tried these steps.</p>

<p>Let’s jump to the real stuff. First, you need to add official Dell apt repositories to your system.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># add these lines to /etc/apt/sources.list.d/dell.list </span>
deb http://dell.archive.canonical.com/updates/ focal-dell public
deb http://dell.archive.canonical.com/updates/ focal-oem public
deb http://dell.archive.canonical.com/updates/ focal-somerville public
deb http://dell.archive.canonical.com/updates/ focal-somerville-melisa public
</code></pre></div></div>

<p>Then update the system keyring with Dell repository GPG keys so that apt does not complain about package signing.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-key adv <span class="nt">--keyserver</span> keyserver.ubuntu.com <span class="nt">--recv-keys</span> F9FDA6BED73CDC22
</code></pre></div></div>

<p>Now update package meta-data and install fingerprint drivers. <code class="language-plaintext highlighter-rouge">lsusb</code> revealed that mine was <code class="language-plaintext highlighter-rouge">0a5c:5843 Broadcom Corp. 58200</code> yet I installed the <code class="language-plaintext highlighter-rouge">goodix</code> driver just to be sane.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install</span> <span class="nt">-y</span> fprintd libfprint-2-tod1-broadcom libfprint-2-tod1-goodix libfprint-2-tod1
</code></pre></div></div>

<p>Once done, you need to check if the device is detected by <code class="language-plaintext highlighter-rouge">fprintd</code> . Run <code class="language-plaintext highlighter-rouge">fprintd-list</code> with your username and something similar to the following should appear.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>fprintd-list minhaz
...
found 1 devices
Device at /net/reactivated/Fprint/Device/0
Using device /net/reactivated/Fprint/Device/0
</code></pre></div></div>

<p>If not, check again if the driver is installed properly. If any device is detected, it’s time to provide some sample fingerprints to the system.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>fprintd-enroll minhaz
</code></pre></div></div>

<p>You have to press the sensor <strong>several</strong> times. Once done, it will confirm that your username is enrolled with the fingerprint.</p>

<p>Finally, you have to allow PAM to use fingerprint sensor as authentication mechanism. Run the following command and enable <code class="language-plaintext highlighter-rouge">Fingerprint authentication</code> and you should be good to go.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>pam-auth-update
</code></pre></div></div>

<p>From now on, simply put your finger on the sensor after executing <code class="language-plaintext highlighter-rouge">sudo -i</code>. This should work for login and lock screens too.</p>

<p>Let me know how it works for you.</p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[After struggling for several months, I have finally been able to make the fingerprint sensor on my Dell Latitude 5300 laptop work on Ubuntu. The steps were pretty simple. I have no idea why never tried these steps.]]></summary></entry><entry><title type="html">Extract/Patch a File inside a ConfigMap</title><link href="https://bits.mdminhazulhaque.io/kubernetes/extract-patch-file-configmap.html" rel="alternate" type="text/html" title="Extract/Patch a File inside a ConfigMap" /><published>2022-05-13T00:00:00+06:00</published><updated>2022-05-13T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/kubernetes/extract-patch-file-configmap</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/kubernetes/extract-patch-file-configmap.html"><![CDATA[<p>ConfigMap works great when you need to mount several files inside a container virtually.</p>

<p>Imagine you have a ConfigMap (like the following) with multiple files inside it and you want to extract/patch a single one of them.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">ConfigMap</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">app-config</span>
<span class="na">data</span><span class="pi">:</span>
  <span class="na">config.json</span><span class="pi">:</span>
    <span class="pi">{</span>
      <span class="s2">"</span><span class="s">server"</span><span class="pi">:</span> <span class="s2">"</span><span class="s">0.0.0.0"</span><span class="pi">,</span>
      <span class="s2">"</span><span class="s">feature"</span><span class="pi">:</span> <span class="nv">true</span>
    <span class="pi">}</span>

  <span class="na">hosts</span><span class="pi">:</span> <span class="pi">|</span>
    <span class="s">127.0.0.1  localhost</span>
    <span class="s">10.10.0.1  example.com</span>

  <span class="na">app.conf</span><span class="pi">:</span> <span class="pi">|</span>
    <span class="s">[main]</span>
    <span class="s">appName=Awesome App</span>
</code></pre></div></div>

<p>To extract a single file say <code class="language-plaintext highlighter-rouge">config.json</code>, run the following.</p>

<!--  -->
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get cm app-config <span class="nt">-o</span> go-template<span class="o">=</span><span class="s1">'{{index .data "config.json"}}'</span> <span class="o">&gt;</span> config.json
</code></pre></div></div>
<!--  -->

<p>To patch a single file say <code class="language-plaintext highlighter-rouge">app.conf</code> inside the ConfigMap run the following.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create cm app-config <span class="nt">--from-file</span><span class="o">=</span>app.conf<span class="o">=</span>app.conf <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml | <span class="se">\</span>
kubectl patch cm app-config <span class="nt">--type</span> merge <span class="nt">--patch-file</span> /dev/stdin
</code></pre></div></div>

<p>Hope that helps.</p>]]></content><author><name></name></author><category term="kubernetes" /><summary type="html"><![CDATA[ConfigMap works great when you need to mount several files inside a container virtually.]]></summary></entry><entry><title type="html">মালয়েশিয়ায় রিলোকেশন ৭ - চাকরি বদলানো</title><link href="https://bits.mdminhazulhaque.io/malaysia/malaysia-change-job.html" rel="alternate" type="text/html" title="মালয়েশিয়ায় রিলোকেশন ৭ - চাকরি বদলানো" /><published>2020-10-19T00:00:00+06:00</published><updated>2020-10-19T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/malaysia/malaysia-change-job</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/malaysia/malaysia-change-job.html"><![CDATA[<blockquote>
  <p>পূর্ববর্তী পোস্ট <a href="/malaysia/malaysia-tax-related.html">মালয়েশিয়ায় রিলোকেশন ৬ - ট্যাক্স বিষয়ক</a></p>
</blockquote>

<p>নতুন চ্যালেঞ্জ, নতুন পরিবেশ, নতুন শেখার স্কোপ - এইরকম নানা কারণে মানুষ চাকরি বদল করে থাকে। মালয়েশিয়ার চাকরির মার্কেটেও জব সুইচ খুবই সাধারণ একটা বিষয়, এমনকি ফরেনারদের জন্যেও। আজকের পর্বে আমি বলবো কিভাবে এক কোম্পানি থেকে অন্য কোম্পানিতে চাকরি বদল করবেন। যেহেতু মালয়েশিয়াতে আপনার ভিসা (বা এমপ্লয়মেন্ট পাস) কোম্পানির সাথে একসুতায় বাঁধা, সুতরাং এই কাজগুলো সতর্কতা ও সময়মত করাটা খুবই জরুরী।</p>

<h2 id="নোটিশ-পিরিয়ড-ও-রিজাইন-লেটার-দেওয়া">নোটিশ পিরিয়ড ও রিজাইন লেটার দেওয়া</h2>

<p>নতুন কোন কোম্পানি থেকে অফার লেটার পাওয়ার পর প্রথম ও খুবই জরুরী একটা ধাপ হল আপনার নোটিশ পিরিয়ড বুঝে আপনার ম্যানেজার ও HR এর কাছে রিজাইন লেটার জমা দেওয়া। সাধারণত নোটিশ পিডিয়ড ১-৩ মাসের হয়ে থাকে। কারো ক্ষেত্রে কনট্রাক্ট ১-২ বছরের জন্যেও লকড-ইন থাকতে পারে। সুতরাং চাকরি বদলাতে হলে সবার আগে এইটুকু কনফার্ম করতে হবে যে আপনার <strong>রিজাইন লেটার এপ্রুভ হয়েছে এবং নোটিশ পিডিয়ড শেষে আপনি রিলিজ</strong> নিতে পারবেন। এই তারিখগুলা আপনার নতুন কোম্পানির জন্য খুবই গুরুত্বপূর্ণ কেননা তারাও তাদের দিক থেকে ডকুমেন্টস রেডি করবে আপনার দেওয়া তথ্য অনুযায়ী।</p>

<p>তো মনে করুন, আপনি রিজাইন দিলেন <strong>অক্টোবর মাসের ১৫ তারিখ</strong> এবং আপনার <strong>নোটিশ পিরিয়ড ২ মাস</strong>। অর্থাৎ <strong>নভেম্বর ১৫</strong> থেকে আপনি আর পুরাতন কোম্পানির এমপ্লয়ী থাকছেন না। এখন আপনার কাজ হবে, পুরাতন কোম্পানির আন্ডারে রেজিস্টার করা EP (Employment Pass) ও DP (Dependent Pass) ক্যানসেল করা এবং নতুন কোম্পানির আন্ডারে সেগুলা রেজিস্ট্রেশন করানো। এই EP/DP ট্রান্সফার পদ্ধতিটা আমরা পাঁচটা ভাগে ভাগ করতে পারি।</p>

<h2 id="১-অনলাইন-ক্যানসেলেশন">১। অনলাইন ক্যানসেলেশন</h2>

<p>এটাকে অনেক সময় সফট ক্যানসেলেশন-ও বলা হয়। পুরাতন কোম্পানি সাধারণত আপনার শেষ ওয়ার্কিং ডে-র <strong>৩০ দিন</strong> আগে অনলাইনে আপনার EP/DP ক্যানসেল করে দিবে। কোম্পানি ভেদে এই সময়টা কমবেশী হতে পারে। অনলাইন ক্যানসেলেশন HR নিজেরাই MDEC/ESD এর ড্যাশবোর্ড থেকে কয়েক মিনিটেই করতে পারে। ক্যানসেল করার অর্থ হল আপনার ও ডিপেন্ডেন্টদের পাসপোর্ট নম্বর আর পুরাতন কোম্পানির সাথে <strong>Bind</strong> করা থাকছেনা। এখন নতুন যেকোন কোম্পানি আপনাদের পাসপোর্ট নম্বরগুলো নিজেদের সাথে <strong>Bind</strong> করে নিতে পারে। (প্রোগ্রামারদের মত <strong>Bind</strong> টার্ম ছাড়া বিকল্প কিছু পেলাম না হিহি!)</p>

<h2 id="২-অনলাইন-রেজিস্ট্রেশন">২। অনলাইন রেজিস্ট্রেশন</h2>

<p>এখন নতুন কোম্পানির দায়িত্ব হল আপনার হয়ে EP/DP এর জন্য আবেদন করা। সাধারণত কয়েকদিনের মাঝেই এই রেজিসট্র্রেশন কনফার্ম করা হয়। নতুন করে EP/DP আবেদন করতে বেশ কয়েকটি কাগজপত্র লাগে। সেগুলোর লিস্ট দিচ্ছি।</p>

<h3 id="ep-এর-জন্য-দরকারী-কাগজপত্র">EP এর জন্য দরকারী কাগজপত্র</h3>

<ul>
  <li>নতুন কোম্পানির সাথে অফার লেটার ও কনট্রাক্ট সাইন এগ্রিমেন্ট (এইটা নতুন কোম্পানিই আপনাকে দিবে)</li>
  <li>৩.৫ বাই ৫ সেমি সাইজের পাসপোর্ট ফটো (ব্যাকগ্রাউন্ড কালার নীল হতে হবে, ভিসার ছবির মত সাদা হলে হবেনা)</li>
  <li>বাংলাদেশে মালয়েশিয়ান এমব্যাসী থেকে সত্যায়িত করা শিক্ষাগত যোগ্যতার সনদ (ব্যাচেলরস বা মাস্টার্স বা পিএইচডি’র সনদ)</li>
  <li>পাসপোর্টের সকল পেজের স্ক্যান কপি (কভার সহ করে নিন ভাই)</li>
  <li>লেটেস্ট eBE Assesment Acknowledgment ফর্ম (<a href="/malaysia/malaysia-tax-related.html">ট্যাক্স বিষয়ে জানতে এখানে দেখুন</a>)</li>
  <li>লেটেস্ট রেজিউম</li>
  <li>রিলিজ লেটার (মাইরালা! এইটা নিয়ে পরে বিস্তারিত বলছি)</li>
</ul>

<h3 id="dp-এর-জন্য-দরকারী-কাগজপত্র">DP এর জন্য দরকারী কাগজপত্র</h3>

<ul>
  <li>৩.৫ বাই ৫ সেমি সাইজের পাসপোর্ট ফটো (ব্যাকগ্রাউন্ড কালার নীল হতে হবে, ভিসার ছবির মত সাদা হলে হবেনা)</li>
  <li>বাংলাদেশে মালয়েশিয়ান এমব্যাসী থেকে সত্যায়িত করা নিকাহ নামা, ম্যারেজ সার্টিফিকেট (স্ত্রীর) ও জন্মসনদ (সন্তানদের)</li>
  <li>পাসপোর্টের সকল পেজের স্ক্যান কপি (কভার সহ করে নিন ভাই)</li>
</ul>

<p>কাগজপত্র কিভাবে সত্যায়িত করবেন তা জানতে দেখুন এই লিংক: <a href="/malaysia/malaysia-salary-negotiation-employment-pass.html">দরকারী কাগজপত্র</a>।</p>

<h2 id="৩-ফিজিকাল-ক্যানসেলেশন">৩। ফিজিকাল ক্যানসেলেশন</h2>

<p>নতুন কোম্পানি আপনার দেওয়া সকল কাগজপত্র অনলাইনে রেজিস্টার করে ফেললে MDEC/ESD তাদেরকে একটা Acknowledgement Letter দিবে। এবার আপনার পুরাতন কোম্পানির কাজ হল, আপনার ও আপনার ডিপেন্ডেন্টদের সকলের পাসপোর্টে ফিজিকালি ভিসা ক্যানসেলেশন স্ট্যাম্প করিয়ে নেওয়া। এই কাজের জন্য আপনার পুরাতন কোম্পানির HR কে নতুন কোম্পানির MDEC/ESD পোর্টাল থেকে পাওয়া Acknowledgement Letter এর কপি জমা দিতে হবে। আর সবার পাসপোর্ট তো সাথে দিতে হবেই (নইলে ক্যানসেলেশন সীল মারবে কিসে হেহে)।</p>

<p>এই কাজটা সাধারণত একদিনেই করা সম্ভব। করোনাভাইরাস রিলেটেড কারণে যদি অফিস বন্ধ থাকে বা অনলাইন এপয়ন্টমেন্ট সিস্টেম মেনে যেতে হয়, তাহলে সময় বেশী লাগতে পারে। মনে রাখবেন, ফিজিকাল ক্যানসেলেশন না হলে কোনভাবেই নতুন কোম্পানিতে আপনি চাকরি শুরু করতে পারবেন না, কিংবা তারাও কোন প্রকার ডকুমেন্ট প্রসেস করতে পারবেনা (সব কোম্পানিতে নিয়ম এরকম নয় যদিও)।</p>

<p>এনিওয়ে, ফিজিকাল ক্যানসেলেশন হয়ে গেলে পুরাতন কোম্পানি আপনাকে দুইটা জিনিস দিবে। এক, <strong>আপনার ও ডিপেন্ডেন্টদের পাসপোর্ট</strong>। দুই, <strong>মালয় ভাষায় একটি রিলিজ লেটার</strong> যেখানে উল্লেখ করা থাকবে আপনার <strong>পাসপোর্ট নাম্বার, ফিজিকাল ক্যানসেলেশনের তারিখ ও ভিসার মেয়াদ</strong>। এই দুইটি জিনিসই আপনার পরবর্তী ধাপের জন্য খুবই গুরুত্বপূর্ণ।</p>

<h2 id="৪-রি-সাবমিশন-বা-পুনঃ-এপ্লিকেশন-করা">৪। রি-সাবমিশন বা পুনঃ এপ্লিকেশন করা</h2>

<p>এতদিন পর্যন্ত আপনার EP/DP নতুন কোম্পানির আন্ডারে সফট রেজিস্টার্ড ছিল। এখন সময় হয়ে এল পরবর্তী স্টেপের জন্য। এই এপ্রুভাল পূরণ করতে আগের অংশে মেনশন করা দুইটি জিনিস আপনার নতুন কোম্পানির HR কে পাঠাতে হবে। জিনিস দুইটা হল, আপনার (সাথে ডিপেন্ডেন্টদেরও) <strong>ভিসা ক্যানসেলেশন পেজের স্ক্যান কপি</strong> এবং <strong>রিলিজ লেটার</strong>। এই দুটা ডকুমেন্ট পেলে নতুন কোম্পানি আপনার EP/DP এপ্লিকেশনটি পুনরায় সাবমিট করবে। এইটাকে অনেক সময় Stage-1 Approval ও বলা হয়ে থাকে। এই স্টেপটা একটু লম্বা সময় নিয়ে থাকে।</p>

<p>অনেক সময় দেখা যায় স্টেজ ওয়ান এপ্রুভাল হওয়ার আগেই পুরাতন কোম্পানির ভিসার মেয়াদ শেষ হয়ে যায়। এক্ষেত্রে নতুন কোম্পানি চাইলে আপনার (সাথে ডিপেন্ডেন্টদেরও) জন্য স্পেশাল পাসের ব্যাবস্থা করতে পারে। স্পেশাল পাসের আপনাকে অতিরিক্ত কোন ডকুমেন্টস জমা দিতে হবেনা। শুধুমাত্র কোম্পানির পক্ষ থেকে একজন একটা চিঠি দিবে যেটায় উল্লেখ থাকবে যে আপনার EP/DP ওই কোম্পানির আন্ডারে প্রসেসিং এ রয়েছে। এই উদ্দেশ্যে আপনার মালয়েশিয়া থাকার মেয়াদ ১ মাস বাড়ানো হোক। আপনি (এবং আপনার স্ত্রী, সন্তানরাও) সাইন করে দিলে বাকি ডকুমেন্টস নতুন কোম্পানিই প্রসেস করে আপনাকে স্পেশাল পাস নিয়ে দিবে। তবে স্পেশাল পাস নিতে হলে নতুন কোম্পানিকে আপনার ও ডিপেন্ডেন্টদের পাসপোর্ট জমা দিতে হবে।</p>

<h2 id="৫-ফিজিকাল-এন্ডোর্সমেন্ট">৫। ফিজিকাল এন্ডোর্সমেন্ট</h2>

<p>স্টেজ ওয়ান এপ্রুভাল হয়ে গেলে আপনি অফিশিয়ালি নতুন কোম্পানিতে বৈধভাবে কাজ করার অনুমতি পাবেন। সেই সাথে আপনার ও ডিপেন্ডেন্টদের পাসপোর্ট জমা দিয়ে নতুন পেজে ভিসা স্টিকার লাগিয়ে দেওয়া হবে। পাসপোর্টে স্টিকার লেগে গেলেই সব ল্যাঠা চুকে গেল। <del>চাকরিটা</del> ভিসাটা আমি পেয়ে গেছি বেলা শুনছো, আর কেও আটকাতে পারবেনা!</p>

<p>আপনাদের বুঝবার সুবিধার্থে সম্পূর্ণ স্টেপগুলা একটা ডায়াগ্রাম আকারে দিচ্ছি। তবে হ্যা, কোম্পানি ভেদে কিছু নিয়ম বা কাগজপত্র কমবেশী লাগতে পারে।</p>

<p><img src="https://i.imgur.com/pL2W0c1.png" alt="Malaysia Switch Job Flow" /></p>

<p>আশা করি বরাবরের মতই এই পোস্টটি আপনাদের কাজে লাগবে। ধন্যবাদ।</p>]]></content><author><name></name></author><category term="malaysia" /><summary type="html"><![CDATA[পূর্ববর্তী পোস্ট মালয়েশিয়ায় রিলোকেশন ৬ - ট্যাক্স বিষয়ক]]></summary></entry><entry><title type="html">মালয়েশিয়ায় রিলোকেশন ৬ - ট্যাক্স বিষয়ক</title><link href="https://bits.mdminhazulhaque.io/malaysia/malaysia-tax-related.html" rel="alternate" type="text/html" title="মালয়েশিয়ায় রিলোকেশন ৬ - ট্যাক্স বিষয়ক" /><published>2020-09-20T21:16:18+06:00</published><updated>2020-09-20T21:16:18+06:00</updated><id>https://bits.mdminhazulhaque.io/malaysia/malaysia-tax-related</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/malaysia/malaysia-tax-related.html"><![CDATA[<blockquote>
  <p>পূর্ববর্তী পোস্ট <a href="/malaysia/malaysia-life-style-tips.html">মালয়েশিয়ায় রিলোকেশন ৫ - লাইফস্টাইল টিপস</a></p>
</blockquote>

<p>প্রিয় পাঠক, মালয়েশিয়ায় আসা এবং চাকরি শুরু করার পর সবার একটা কমন প্রশ্ন থাকে। সেটা হল নন-রেসিডেন্ট হিসেবে প্রথম ৬ মাস যে অতিরিক্ত টাকা কেটে নিয়েছে সেটা কবে ফেরত দেওয়া হবে। ফেরত দিলেও কিভাবে, কত টাকা ফেরত দিবে ইত্যাদি প্রশ্ন তো থেকেই যায়। তো এই পর্বে চলুন দেখে নিই কিভাবে আপনি বছর শেষে ট্যাক্স ফাইল করবেন এবং রিফান্ড ক্লেইম করবেন।</p>

<p>প্রথমেই বলে নিই রেসিডেন্সি স্ট্যাটাস কি। মালয়েশিয়ায়  আপনি সর্বমোট যে কয়দিন ধরে বাস করছেন, তার যোগফল যদি ১৮২ বা তার চেয়ে বেশী হয়, তাহলে আপনাকে রেসিডেন্সি স্ট্যাটাস দেওয়া হবে। এই ১৮২ দিনের মাঝে আপনি চাইলে বাংলাদেশ বা অন্যকোন দেশে থাকতে পারেন। আপনি যতদিন না রেসিডেন্সি স্ট্যাটাস পাচ্ছেন, ততদিন আপনাকে ২৮% নন-রেসিডেন্ট ট্যাক্স (২০২০ এর হিসাব অনুযায়ী ৩০%) পে করতে হবে। আপনার কোম্পানিই আপনার বেতন থেকে এই এমাউন্ট কেটে নিবে প্রতিমাসে। ধরে নিন আপনি মালয়েশিয়ায় এসে জব শুরু করলেন মার্চ মাসের ১ তারিখ থেকে। আপনার বেতন ১০০০০ রিংগিত। তাহলে মার্চ-আগস্ট মাস পর্যন্ত আপনি বেতন পাবেন ৭০০০ রিংগিত। আর বাকি ৩০০০ রিংগিত x ৬ = ১৮০০০ রিংগিত ফেরত পাবেন ওই বছরের ট্যাক্স ফাইল সাবমিট করার পর।</p>

<p>কিংবা মনে করেন আপনি ১ মার্চ থেকে চাকরি শুরু করেছেন। কিন্তু জুন মাসে ১৫ দিন আপনি বাংলাদেশে ছিলেন। তাহলে আপনার রেসিডেন্সি স্ট্যাটাস আসবে সেপ্টেম্বর মাসের মাঝামাঝি। সুতরাং সেপ্টেম্বর মাসের পে-রোলেও আপনাকে ৩০% ট্যাক্স দিতে হবে।</p>

<p>এখন কথা হল, এই অতিরিক্ত ট্যাক্স কিভাবে ফেরত পাবেন? ফেরত পেতে হলে ২টা শর্ত আছে।</p>

<p>১। পরবর্তী বছরে আপনাকে বর্তমান বছরের ট্যাক্স ফাইল সাবমিট করতে হবে (মালয়েশিয়ায় জানুয়ারী-ডিসেম্বর অর্থবছর ধরা হয়)
২। যে বছরের ট্যাক্স ফাইল সাবমিট করবেন ওই বছরের ডিসেম্বর মাসের ৩১ তারিখের আগে আপনাকে রেসিডেন্সি স্ট্যাটাস পেতে হবে।</p>

<p>তার মানে হচ্ছে, আপনি যদি আগস্ট বা সেপ্টেম্বর মাসে মালয়েশিয়ায় চাকরি শুরু করেন, তাহলে ডিসেম্বরের ৩১ তারিখে আপনার রেসিডেন্সির ১৮২ দিন পূরণ হবেনা।</p>

<p>এবার চলুন জেনে নেই ট্যাক্স ফাইল সাবমিট কিভাবে করবেন।</p>
<h2 id="ট্যাক্স-ফাইল-সাবমিট-করা">ট্যাক্স ফাইল সাবমিট করা</h2>
<p><strong>ট্যাক্স নাম্বার খোলা</strong> আর <strong>ট্যাক্স ফাইল সাবমিট করা</strong> যে আলাদা বিষয় তা সম্ভবত সবাই জানেন। আপনি যে কোম্পানিতেই চাকরি শুরু করুন না কেন, প্রথম মাসের পে-রোলের আগেই আপনাকে দিয়ে তারা ট্যাক্স নাম্বার (TIN) খুলিয়ে নিবে। রেজিস্ট্রেশনের সময় আপনার HR আপনাকে দরকারী কিছু তথ্য দিবে যেগুলা রেজিসট্রেশনের জন্য দরকারী যেমন Employer Number বা No. Majikan ইত্যাদি।</p>

<p>ডিসেম্বর মাসে ট্যাক্স ইয়ার শেষ হলে পরবর্তী বছরের শুরুতে কোম্পানি আপনাকে একটা ফর্ম দিবে যেটাকে বলে EA Form (Employee’s Aggregated Payroll). এই ফর্মে উক্ত অর্থবছরে কোম্পানি আপনাকে কত টাকা বেতন দিয়েছে এবং কত টাকা ট্যাক্স কেটেছে তার হিসাব দেওয়া থাকবে। কোম্পানি যদি নন-রেসিডেন্ট ট্যাক্স হিসাবে ৩০% কেটে রাখে তাহলে সেটাও এই ফর্মে উল্লেখ থাকবে।</p>

<p>তো ফেব্রুয়ারী মাসের মাঝেই আপন আগের বছরের EA ফর্ম পেয়ে যাবেন। এখন এই ফর্মের ডাটা ও অন্যান্য ট্যাক্স রিবেটের হিসাব আপনাকে অনলাইনে আপলোড করতে হবে। সাধারণত এই কাজটা সহজেই <a href="https://ez.hasil.gov.my/CI/Login.aspx">ezHASiL</a> থেকে করা যায়। এটা হল <a href="http://www.hasil.gov.my/">LHDN</a> এর অনলাইন পোর্টাল যেখানে আপনি ট্যাক্স ফাইল করা, আগের বছরের হিসাব দেখা ইত্যাদি সব কাজ করতে পারবেন।</p>

<p><a href="https://ez.hasil.gov.my/CI/Login.aspx">ezHASiL</a> এ লগিন করতে হলে শুরুতেই আপনাকে রেজিস্ট্রেশন করতে হবে। রেজিস্টার করতে চলে যান <a href="https://ez.hasil.gov.my/CI/LoginKaliPertama.aspx">এই লিংকে</a>। ১৬ ডিজিটের পিন নম্বরটা কোথায় পাবেন? এইটা পেতে হলে আপনাকে আপনার নিকটস্থ বা রেজিস্টার্ড LHDN অফিসে যেতে হবে। আমি সাজেস্ট করব মার্চ মাস শুরু হবার আগেই চলে যান। ওই সময়টায় ভীড় কম থাকে। সাথে পাসপোর্ট নিয়ে যান। অফিসে পৌঁছে কাস্টমার সাপোর্ট খুঁজে বের করুন। বলুন যে আপনি <a href="https://ez.hasil.gov.my/CI/Login.aspx">ezHASiL</a> এ রেজিস্ট্রেশন করতে চান। তারা আপনার পাসপোর্ট দেখে বা TIN দেখে আপনাকে পিন নম্বরটা প্রিন্ট করে দিবে। ওই ১৬ ডিজিট পিন দিয়ে আপনি রেজিস্ট্রেশন করে ফেলুন।</p>

<p>তাহলে আপনার হাতে আছে কোম্পানির দেওয়া EA ফর্ম, আর আছে অনলাইন <a href="https://ez.hasil.gov.my/CI/Login.aspx">ezHASiL</a> একাউন্ট। তাহলে আর দেরী কেন? e-Filling এর সময় শুরু হলে অনলাইনেই যাবতীয় তথ্য পূরণ করে জমা দিয়ে দিন। অনলাইনে আয়, ব্যায়, সঞ্চয় ইত্যাদির যে হিসাব জমা দেওয়া হয়, সেটাকে বলে eBE Assesment. এই ফর্ম পূরণের সময় আপনার ব্যাংক একাউন্ট নম্বর চাওয়া হবে। বুঝতেই পারছেন, কোন অতিরিক্ত ট্যাক্স কাটা হয়ে থাকলে সেটা ওই ব্যাংক একাউন্টে রিফান্ড করে দেওয়া হবে।</p>

<p>eBE Assesment শেষে আপনাকে একটি Acknowledgment ফর্ম দেওয়া হবে যেটায় সংক্ষিপ্ত আকারে আপনার এক বছরের আয়, ট্যাক্স, রিফান্ড ইত্যাদি দেওয়া থাকবে। প্রতিবছর এই ফর্মটি আপনার প্রয়োজন হতে পারে (চাকরি বদলের সময় বা ট্যাক্স ক্লিয়ারেন্স নিতে হলে)। তাই সেটা সযত্নে সংরক্ষণ করুন।</p>

<p>আমার ক্ষেত্রে মার্চ মাসে eFilling করার পর ট্যাক্স রিফান্ড পেতে সময় লেগেছিল প্রায় দুইমাস। সঠিকভাবে ফাইল সাবমিট করার পরেও রিফান্ড না পেলে আপনার LHDN ব্রাঞ্চে গিয়ে অথবা তাদের ইমেইলে যোগাযোগ করতে পারেন। সাধারণত LHDN এর ওয়েবসাইটে প্রতিটা ব্রাঞ্চের অফিসারদের নম্বর ও ইমেইল দেওয়া থাকে। আমার ক্ষেত্রে ইমেইল করে আমি রিফান্ড বিষয়ে দ্রুত সমাধান পেয়েছিলাম।</p>

<h2 id="ট্যাক্স-রিলিফ-পাওয়া">ট্যাক্স রিলিফ পাওয়া</h2>
<p>বাংলাদেশের মতই মালয়েশিয়াতে বিভিন্ন খাতে খরচ করে আপনি কর রেয়াত বা ট্যাক্স রিলিফ পেতে পারেন। যেমন বিবাহিত হলে আপনার করযোগ্য আয় থেকে ৪০০০ রিংগিত, সন্তান থাকলে ২০০০-৮০০০ রিংগিত, ইনসুরেন্স বা EPF কনট্রিবিউশন থাকলে ৬০০০ রিংগিত ইত্যাদি ছাড় রয়েছে। আরেকটি আকর্ষণীয় খাত হল লাইফ স্টাইল ক্যাটাগরিতে ২৫০০ রিংগিত পর্যন্ত ছাড় পাওয়া। আমি সাজেস্ট করব নিচের বিষয়গুলো বিবেচনা করতে।</p>

<ul>
  <li>ল্যাপটপ ও মোবাইল ফোন ক্রয়</li>
  <li>ইন্টারনেট কানেকশনের মাসিক বিল</li>
  <li>জিম বা অন্য স্পোর্টস ইকুইপমেন্ট (যেমন ট্রেড মিল)</li>
  <li>আপনার বা স্ত্রী/সন্তানদের মেডিকেল চেকআপের ফি</li>
</ul>

<p>উক্ত খরচের স্লিপ বা ইনভয়েস থাকলে সেগুলোর এমাউন্ট যোগ করে eBE Assesment এর জায়গামত বসিয়ে দিন। তবে LHDN চাইলে যেকোনসময় এই ডকুমেন্টস দাবি করতে পারে। এজন্য EA ফর্ম ও ট্যাক্স রিলিফের কাজে ব্যাবহৃত সকল ডকুমেন্টস সযত্নে রেখে দিতে হবে। প্রয়োজনের সময় এসব ডকুমেন্ট দেখাতে না পারলে বড় অংকের জরিমানার ব্যাবস্থাও আছে।</p>

<p>সবরকম খাত ও কর রেয়াতের পূর্ণাঙ্গ লিস্ট দেখতে পারেন <a href="http://www.hasil.gov.my/bt_goindex.php?bt_kump=5&amp;bt_skum=1&amp;bt_posi=3&amp;bt_unit=1&amp;bt_sequ=1&amp;bt_lgv=2">এইখানে</a>।</p>

<h2 id="ট্যাক্স-ক্লিয়ারেন্স-নেওয়া">ট্যাক্স ক্লিয়ারেন্স নেওয়া</h2>

<p>ক্ষেত্রবিশেষে আপনাকে ট্যাক্স ক্লিয়ারেন্স নেওয়া লাগতে পারে। যেমন চাকরি বদল, অন্য দেশে রিলোকেশন নেওয়া, মালয়েশিয়া থেকে স্থায়ীভাবে চলে যাওয়া ইত্যাদি।</p>

<p>মূলত ট্যাক্স রিলেটেড সব কাজে আপনার কোম্পানির HR ই সব কাজ করবে। কিন্তু আমার মত যদি কখনও এমন হয় যে কোম্পানির বেহাল দশা এবং HR নেই, তখন নিজে নিজে আপনি ট্যাক্স ক্লিয়ারেন্স নিতে পারেন।</p>

<p>আমি মূলত মালয়েশিয়া থেকে চলে যাওয়ার সময় যে ক্লিয়ারেন্স লাগে সেটার বিষয়ে বলব। মালয়েশিয়ায় থাকা কোন ফরেনার যদি স্থায়ীভাবে চলে যেতে চায়, তাহলে তাকে CP21 ফর্মসহ LHDN ব্রাঞ্চে গিয়ে এপ্লাই করতে হবে। অনলাইনে এপ্লাই করতে হলে <a href="https://ez.hasil.gov.my/CI/Login.aspx">ezHASiL</a> এ লগিন করে e-SPC অপশনে গেলেই আপনি CP21 ট্যাব দেখতে পাবেন।</p>

<p>অনলাইনে এপ্লিকেশন করাটা বেশ সহজই। বেশীরভাগ অপশনই আপনার লাস্ট EA ফর্ম অনুযায়ী আপডেট হয়ে থাকবে। শুধুমাত্র যে বছরে আপনি ক্লিয়ারেন্স নিচ্ছেন ওই বছরে আপনার পে-রোলে কত টাকা ঢুকেছে সেটা বসালেই হবে। আসলে LHDN এর কাছে প্রতিমাসে আপনার নামে কত টাকা ট্যাক্স জমা হচ্ছে সেটার হিসাব আছেই।</p>

<p>অনলাইনে এপ্লিকেশন করলেও আরো কিছু ডকুমেন্টস আছে যেগুলা আপনাকে নিজে জমা দিতে হবে। সেগুলো হল</p>

<ul>
  <li>আপনার পাসপোর্টের সকল পেজের ফটোকপি (মাস্ট, মূল কপিও সাথে নিতে হবে ভেরিফিকেশনের জন্য)</li>
  <li>আপনার স্ত্রী বা সন্তান থাকলে তাদের পাসপোর্টের বায়ো ও ভিসা পেজের ফটোকপি (ডিপেন্ডেন্ট থাকলে মাস্ট)</li>
  <li>আপনি মালয়েশিয়ায় কোন বছর কত তারিখে প্রবেশ করেছেন এবং কত তারিখে বের হয়েছেন তার সম্পূর্ণ টাইমলাইন (পাসপোর্টে এয়ারপোর্টের সীল দেখে এটা হিসাব করতে পারবেন)</li>
  <li>সে বছরে ক্লিয়ারেন্স নিচ্ছেন ওই বছরের BE ফর্ম (অফিস থেকেই দেওয়া হবে)</li>
  <li>আপনার কোম্পানি থেকে পাওয়া শেষ EA ফর্ম (আগের বছরের গুলাও লাগতে পারে)</li>
  <li>সম্ভাব্য যাত্রার তারিখ ও টিকেট (যদি থাকে)</li>
</ul>

<p>উপরের কাগজপত্র গুলো রেডি করে চলে যান আপনার রেজিস্টার্ড LHDN ব্রাঞ্চে। সেখানে কাস্টমার কেয়ার বিভাগে গিয়ে বলুন আপনি ট্যাক্স ক্লিয়ারেন্স নিতে এসেছেন। তারা আপনাকে দায়িত্বরত কোন অফিসারের কাছে ফরোয়ার্ড করে দিবে। অফিসারকে আপনার সকল কাগজপত্র বুঝিয়ে দিন। উনার সাহায্য নিয়ে Malaysia Exit/Entry Information এবং BE Assessment ফর্ম পূরণ করে জমা দিয়ে দিন। সব ঠিকঠাক থাকলে ১০-১৫ কর্মদিবসের মাঝে আপনার ইমেইলে এবং পোস্টাল এড্রেসে ট্যাক্স ক্লিয়ারেন্স পৌঁছে যাবে।</p>

<p>আশা করি পোস্টটি আপনাদের কাজে লাগবে। মালয়েশিয়ান ট্যাক্স রিলেটেড কোন প্রশ্ন থাকলে কমেন্ট বক্সে জিজ্ঞাসা করতে পারেন। ধন্যবাদ।</p>

<blockquote>
  <p>পরবর্তী পোস্ট <a href="/malaysia/malaysia-change-job.html">মালয়েশিয়ায় রিলোকেশন ৭ - চাকরি বদলানো</a></p>
</blockquote>]]></content><author><name></name></author><category term="malaysia" /><summary type="html"><![CDATA[পূর্ববর্তী পোস্ট মালয়েশিয়ায় রিলোকেশন ৫ - লাইফস্টাইল টিপস]]></summary></entry><entry><title type="html">Monitor OpenVPN Client Activity using Python</title><link href="https://bits.mdminhazulhaque.io/linux/monitor-openvpn-client-activity-using-python.html" rel="alternate" type="text/html" title="Monitor OpenVPN Client Activity using Python" /><published>2020-08-09T00:00:00+06:00</published><updated>2020-08-09T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/linux/monitor-openvpn-client-activity-using-python</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/linux/monitor-openvpn-client-activity-using-python.html"><![CDATA[<p>Installing OpenVPN in your own server gives you two major benefits. First, you will have better privacy control. Second, no need to spend on <code class="language-plaintext highlighter-rouge">pay-per-user</code> thing. As long as the CPU can handle encryption/decryption, and the ethernet controller can handle the traffic, OpenVPN is a pretty good choice for providing VPN service to a small-sized team.</p>

<h2 id="openvpn-config">OpenVPN Config</h2>

<p>Anyway, a typical OpenVPN Server configuration looks like the following.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dev tun-udp-1194
server 10.10.10.0 255.255.255.0
proto udp
port 1194

ca /etc/openvpn/pki/ca.crt
cert /etc/openvpn/pki/issued/server@mdminhazulhaque.io.crt
key /etc/openvpn/pki/private/server@mdminhazulhaque.io.key
dh /etc/openvpn/pki/dh.pem
crl-verify /etc/openvpn/pki/crl.pem

remote-cert-tls client
keepalive 10 120
tls-auth /etc/openvpn/pki/ta.key 0
cipher AES-256-CBC
tls-cipher TLS-DHE-DSS-WITH-AES-256-CBC-SHA256
auth SHA256
tls-version-min 1.2
comp-lzo
persist-key
persist-tun
verb 0
</code></pre></div></div>

<h2 id="openvpn-management-over-telnet">OpenVPN Management over Telnet</h2>

<p>In order to access the telnet management console, the following line has to be added in <code class="language-plaintext highlighter-rouge">/etc/openvpn/server.conf</code>. Also the <code class="language-plaintext highlighter-rouge">openvpn.service</code> must be reloaded for the change to take effect.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>management 127.0.0.1 7000
</code></pre></div></div>

<p>Alright. Next thing is, try connecting to port <code class="language-plaintext highlighter-rouge">7000</code> via <code class="language-plaintext highlighter-rouge">telnet</code> command. If it was a success, then we can use a small Python3 script to talk with the OpenVPN server.</p>

<h2 id="a-bit-of-knowledge-about-common-name">A Bit of Knowledge about Common Name</h2>

<p>Before we run any script, we need to find out the <code class="language-plaintext highlighter-rouge">CN</code> or Common Name used in the RSA Root Certificate. For example, if you generate the <code class="language-plaintext highlighter-rouge">CA</code> file with <code class="language-plaintext highlighter-rouge">CN=mdminhazulhaque.io</code>, both EasyRSA and OpenVPN will append this <code class="language-plaintext highlighter-rouge">CN</code> after the client’s name. A sample server and client names could be as follows.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Server: server@mdminhazulhaque.io
Client Mark: mark@mdminhazulhaque.io
Client Bob: bob@mdminhazulhaque.io
Client Alice: alice@mdminhazulhaque.io
</code></pre></div></div>

<p>Which means, the client names must be unique because OpenVPN uses the client name to map DHCP IP Addresses for remote users.</p>

<h2 id="run-the-script">Run the Script!</h2>

<p>Well, now we know the common name. It could be <code class="language-plaintext highlighter-rouge">mdminhazulhaque.io</code>, or <code class="language-plaintext highlighter-rouge">example.com</code> or <code class="language-plaintext highlighter-rouge">server</code> or anything. We need to amend the <code class="language-plaintext highlighter-rouge">RE_COMMON_NAME</code> regex and put the correct value there. Once done, upload the script to the OpenVPN server and run it using <code class="language-plaintext highlighter-rouge">python3</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">telnetlib</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="c1"># TODO change here
</span><span class="n">RE_COMMON_NAME</span> <span class="o">=</span> <span class="s">"^*@mdminhazulhaque.io.*$"</span>

<span class="n">HOST</span> <span class="o">=</span> <span class="s">"127.0.0.1"</span>
<span class="n">PORT</span> <span class="o">=</span> <span class="s">"7000"</span>
<span class="n">INTERVAL</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">PRE_USERS</span> <span class="o">=</span> <span class="p">{}</span>

<span class="k">def</span> <span class="nf">alert</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">ip</span><span class="p">,</span> <span class="n">state</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">F</span><span class="s">"*</span><span class="si">{</span><span class="n">user</span><span class="si">}</span><span class="s">* </span><span class="si">{</span><span class="n">state</span><span class="si">}</span><span class="s"> from </span><span class="si">{</span><span class="n">ip</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="c1"># TODO You can call Slack or API Gateway here
</span>    
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">telnet</span> <span class="o">=</span> <span class="n">telnetlib</span><span class="p">.</span><span class="n">Telnet</span><span class="p">(</span><span class="n">HOST</span><span class="p">,</span><span class="n">PORT</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="n">telnet</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"status</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">output</span> <span class="o">=</span> <span class="n">telnet</span><span class="p">.</span><span class="n">read_until</span><span class="p">(</span><span class="s">"END</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">telnet</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    
    <span class="n">CURR_USERS</span> <span class="o">=</span> <span class="p">{}</span>
    
    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">output</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="n">RE_COMMON_NAME</span><span class="p">,</span> <span class="n">line</span><span class="p">):</span>
            <span class="n">user</span><span class="p">,</span> <span class="n">realaddress</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">","</span><span class="p">)</span>
            <span class="n">ip</span> <span class="o">=</span> <span class="n">realaddress</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">":"</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">CURR_USERS</span><span class="p">[</span><span class="n">user</span><span class="p">]</span> <span class="o">=</span> <span class="n">ip</span>
    
    <span class="n">connected</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">CURR_USERS</span><span class="p">.</span><span class="n">keys</span><span class="p">())</span> <span class="o">-</span> <span class="nb">set</span><span class="p">(</span><span class="n">PRE_USERS</span><span class="p">.</span><span class="n">keys</span><span class="p">())</span>
    <span class="n">disconnected</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">PRE_USERS</span><span class="p">.</span><span class="n">keys</span><span class="p">())</span> <span class="o">-</span> <span class="nb">set</span><span class="p">(</span><span class="n">CURR_USERS</span><span class="p">.</span><span class="n">keys</span><span class="p">())</span>
    
    <span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="n">connected</span><span class="p">):</span>
        <span class="n">alert</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">CURR_USERS</span><span class="p">[</span><span class="n">user</span><span class="p">],</span> <span class="s">"connected"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="n">disconnected</span><span class="p">):</span>
        <span class="n">alert</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">PRE_USERS</span><span class="p">[</span><span class="n">user</span><span class="p">],</span> <span class="s">"disconnected"</span><span class="p">)</span>
    
    <span class="n">PRE_USERS</span> <span class="o">=</span> <span class="n">CURR_USERS</span>    
    
    <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">INTERVAL</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="the-result">The Result</h2>

<p>If you keep running the script in background (<code class="language-plaintext highlighter-rouge">screen</code> or <code class="language-plaintext highlighter-rouge">systemd</code> whichever you prefer), you will see activity alerts like the following.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mark@mdminhazulhaque.io connected from 190.106.117.114
bob@mdminhazulhaque.io connected from 186.110.104.190
alice@mdminhazulhaque.io connected from 144.143.163.176
...
alice@mdminhazulhaque.io disconnected from 144.143.163.176
mark@mdminhazulhaque.io disconnected from 190.106.117.114
bob@mdminhazulhaque.io disconnected from 186.110.104.190
</code></pre></div></div>

<h2 id="more-tweaks">More Tweaks</h2>

<p>You can simply override the <code class="language-plaintext highlighter-rouge">alert</code> function and call custom Slack or API Gateway URL using <code class="language-plaintext highlighter-rouge">requests</code>. Tada!</p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Installing OpenVPN in your own server gives you two major benefits. First, you will have better privacy control. Second, no need to spend on pay-per-user thing. As long as the CPU can handle encryption/decryption, and the ethernet controller can handle the traffic, OpenVPN is a pretty good choice for providing VPN service to a small-sized team.]]></summary></entry><entry><title type="html">MongoDB for MySQL People</title><link href="https://bits.mdminhazulhaque.io/mongodb/mongodb-for-mysql-people.html" rel="alternate" type="text/html" title="MongoDB for MySQL People" /><published>2020-07-30T00:00:00+06:00</published><updated>2020-07-30T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/mongodb/mongodb-for-mysql-people</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/mongodb/mongodb-for-mysql-people.html"><![CDATA[<p>I am a MySQL guy. I can query MySQL, BigQuery or SQL-like databases for my day to day business. Last week, I faced a challenge where I needed to extract some information from a production MongoDB server that involves aggregation. I had no idea how MongoDB works or how to run CRUD operation on such database. So obviously, I spent my whole weekend in learning MongoDB. In this post I am going to share the MongoDB queries I learnt, and the equivalent MySQL queries as well.</p>

<blockquote>
  <p>I used MongoDB v3.6, for both daemon and cli, so some functions may not work with your current setup</p>
</blockquote>

<h2 id="populate-data-and-load-into-mongodb">Populate Data and Load into MongoDB</h2>

<p>I used the following piece of code to scrap my Github profile information into a single JSON file.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="n">username</span> <span class="o">=</span> <span class="s">'mdminhazulhaque'</span>
<span class="n">repos</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">page</span> <span class="o">=</span> <span class="mi">1</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">params</span> <span class="o">=</span> <span class="p">(</span>
        <span class="p">(</span><span class="s">'page'</span><span class="p">,</span> <span class="n">page</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'type'</span><span class="p">,</span> <span class="s">'owner'</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'per_page'</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://api.github.com/users/{username}/repos'</span>\
        <span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="n">username</span><span class="p">),</span> <span class="n">params</span><span class="o">=</span><span class="n">params</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">single</span> <span class="ow">in</span> <span class="n">response</span><span class="p">.</span><span class="n">json</span><span class="p">():</span>
        <span class="n">repos</span><span class="p">.</span><span class="n">append</span><span class="p">({</span>
            <span class="s">"name"</span><span class="p">:</span> <span class="n">single</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'name'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
            <span class="s">"description"</span><span class="p">:</span> <span class="n">single</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'description'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
            <span class="s">"created_at"</span><span class="p">:</span> <span class="n">single</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'created_at'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
            <span class="s">"language"</span><span class="p">:</span> <span class="n">single</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'language'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
            <span class="s">"stargazers_count"</span><span class="p">:</span> <span class="n">single</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'stargazers_count'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
        <span class="p">})</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">json</span><span class="p">())</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">:</span>
        <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">page</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"github.json"</span><span class="p">,</span> <span class="s">"w"</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">repos</span><span class="p">,</span> <span class="n">fp</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
</code></pre></div></div>

<p>Then I loaded the JSON data into MongoDB using <code class="language-plaintext highlighter-rouge">mongoimport</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mongoimport <span class="nt">--db</span> <span class="nb">local</span> <span class="nt">--collection</span> repos <span class="nt">--drop</span> <span class="nt">--jsonArray</span> <span class="nt">--file</span> github.json 
</code></pre></div></div>

<p>One record from the <code class="language-plaintext highlighter-rouge">repo</code> collection looks like the following.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mongo 127.0.0.1/local
<span class="o">&gt;</span> db.repos.findOne<span class="o">()</span>
<span class="o">{</span>
        <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e29"</span><span class="o">)</span>,
        <span class="s2">"name"</span> : <span class="s2">"a-pdf-reader"</span>,
        <span class="s2">"description"</span> : <span class="s2">"A poppler based pdf reader written in Qt4"</span>,
        <span class="s2">"created_at"</span> : <span class="s2">"2012-10-07T20:44:48Z"</span>,
        <span class="s2">"language"</span> : <span class="s2">"C++"</span>,
        <span class="s2">"stargazers_count"</span>: null
<span class="o">}</span>
</code></pre></div></div>

<p>Let’s start playing with MongoDB.</p>

<h2 id="select">SELECT</h2>

<h3 id="select--from-repos">select * from repos</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({})</span>

<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e2a"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"apt-sync"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2017-11-19T04:57:23Z"</span>, <span class="s2">"language"</span> : <span class="s2">"Python"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e2b"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2020-02-27T16:38:21Z"</span>, <span class="s2">"language"</span> : null, <span class="s2">"stargazers_count"</span> : 52 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e2c"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"banglalion-wimax-mac"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2015-02-25T19:15:48Z"</span>, <span class="s2">"language"</span> : <span class="s2">"HTML"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e2d"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"annoying-bn-text"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2019-06-05T17:25:05Z"</span>, <span class="s2">"language"</span> : <span class="s2">"HTML"</span>, <span class="s2">"stargazers_count"</span> : 1 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e2e"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"banglalionwimaxapi"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2018-10-16T13:03:53Z"</span>, <span class="s2">"language"</span> : <span class="s2">"Python"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e2f"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"bcm-wimax-dkms"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2017-05-20T18:22:07Z"</span>, <span class="s2">"language"</span> : <span class="s2">"C"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : ObjectId<span class="o">(</span><span class="s2">"5f1cfca24662cbc419b65e30"</span><span class="o">)</span>, <span class="s2">"name"</span> : <span class="s2">"bd-mrp-api"</span>, <span class="s2">"created_at"</span> : <span class="s2">"2018-12-31T20:26:48Z"</span>, <span class="s2">"language"</span> : <span class="s2">"Python"</span>, <span class="s2">"stargazers_count"</span> : 1 <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-description-from-repos">select name, description from repos</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({}</span>, <span class="o">{</span>_id:0, name:1, description:1<span class="o">})</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"a-pdf-reader"</span>, <span class="s2">"description"</span> : <span class="s2">"A poppler based pdf reader written in Qt4"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"apt-sync"</span>, <span class="s2">"description"</span> : <span class="s2">":gift: Sync APT installed package list across different machines"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"description"</span> : <span class="s2">":cloud: AWS CLI + JQ = Make life easier"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"banglalion-wimax-mac"</span>, <span class="s2">"description"</span> : <span class="s2">":satellite: Banglalion WiMAX on Mac OS X"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"annoying-bn-text"</span>, <span class="s2">"description"</span> : <span class="s2">"Piss of your friends with awkwardly written Bengali text"</span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-description-from-repos-limit-2">select name, description from repos limit 2</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.aggregate<span class="o">([{</span><span class="nv">$project</span>:<span class="o">{</span>_id:0, name:1, description:1<span class="o">}}</span>, <span class="o">{</span><span class="nv">$limit</span>:5<span class="o">}])</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"a-pdf-reader"</span>, <span class="s2">"description"</span> : <span class="s2">"A poppler based pdf reader written in Qt4"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"apt-sync"</span>, <span class="s2">"description"</span> : <span class="s2">":gift: Sync APT installed package list across different machines"</span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-description-from-repos-order-by-name">select name, description from repos order by name</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({}</span>, <span class="o">{</span>_id:0, name:1, description:1<span class="o">})</span>.sort<span class="o">({</span>name:1<span class="o">})</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"Android-Javascript-Bridge"</span>, <span class="s2">"description"</span> : <span class="s2">"Android and Javascript two way communication"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"Android-JavascriptInterface-Sample"</span>, <span class="s2">"description"</span> : <span class="s2">"Call Java (Android) methods from Webview using Javascript"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"Bilai-PnP-Gui"</span>, <span class="s2">"description"</span> : <span class="s2">":cat2: GUI for Bilai PnP Modems"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"CPPad"</span>, <span class="s2">"description"</span> : <span class="s2">"Write and run C++ codes, instantly!"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"CSE10Routine"</span>, <span class="s2">"description"</span> : <span class="s2">"Tabbed routine app"</span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-stargazers_count-from-repos-order-by-stargazers_count-desc">select name, stargazers_count from repos order by stargazers_count desc</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({}</span>, <span class="o">{</span>_id:0, name:1, stargazers_count:1<span class="o">})</span>.sort<span class="o">({</span>stargazers_count:-1<span class="o">})</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"stargazers_count"</span> : 52 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"probhat-osx"</span>, <span class="s2">"stargazers_count"</span> : 23 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"PyQt-BPNN"</span>, <span class="s2">"stargazers_count"</span> : 22 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"foreach"</span>, <span class="s2">"stargazers_count"</span> : 14 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"html-table-to-json"</span>, <span class="s2">"stargazers_count"</span> : 12 <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-stargazers_count-from-repos-where-stargazers_count--20-order-by-stargazers_count">select name, stargazers_count from repos where stargazers_count &gt; 20 order by stargazers_count</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({</span> stargazers_count: <span class="o">{</span> <span class="nv">$gt</span>: 20<span class="o">}</span> <span class="o">}</span>, <span class="o">{</span>_id:0, name:1, stargazers_count:1<span class="o">})</span>.sort<span class="o">({</span>stargazers_count:-1<span class="o">})</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"stargazers_count"</span> : 52 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"probhat-osx"</span>, <span class="s2">"stargazers_count"</span> : 23 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"PyQt-BPNN"</span>, <span class="s2">"stargazers_count"</span> : 22 <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-stargazers_count-from-repos-where-language--python">select name, stargazers_count from repos where language = “Python”</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({</span> language: <span class="s2">"Python"</span> <span class="o">}</span>, <span class="o">{</span>_id:0, name:1, stargazers_count:1<span class="o">})</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"apt-sync"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"banglalionwimaxapi"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"bd-mrp-api"</span>, <span class="s2">"stargazers_count"</span> : 1 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"flightaware-cli"</span>, <span class="s2">"stargazers_count"</span> : 0 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"html-table-to-json"</span>, <span class="s2">"stargazers_count"</span> : 12 <span class="o">}</span>
</code></pre></div></div>

<h4 id="select-name-description-from-repos-where-description-like-cli">select name, description from repos where description like “%cli%”</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.find<span class="o">({</span> description: /cli/i <span class="o">}</span>, <span class="o">{</span>_id:0, name:1, description:1<span class="o">})</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"description"</span> : <span class="s2">":cloud: AWS CLI + JQ = Make life easier"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"ClipMonitor"</span>, <span class="s2">"description"</span> : <span class="s2">"A tiny clip monitor app built with Qt5"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"foreach"</span>, <span class="s2">"description"</span> : <span class="s2">":repeat: Read lines from file/stdin and execute them as CLI argument"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"kakitangan-cli"</span>, <span class="s2">"description"</span> : <span class="s2">":briefcase: CLI for Kakitangan app, the online HR Software for Malaysian businesses"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"librs232"</span>, <span class="s2">"description"</span> : <span class="s2">":paperclip: RS232 Library in C"</span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-language-count-as-count-description-from-repos-group-by-language-order-by-count">select language, count(*) as count, description from repos group by language order by count</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.aggregate<span class="o">([{</span> <span class="nv">$group</span>: <span class="o">{</span> _id: <span class="s2">"</span><span class="nv">$language</span><span class="s2">"</span>, count: <span class="o">{</span> <span class="nv">$sum</span>: 1 <span class="o">}</span> <span class="o">}</span> <span class="o">}</span>,<span class="o">{</span> <span class="nv">$sort</span>: <span class="o">{</span> count: <span class="nt">-1</span> <span class="o">}</span> <span class="o">}])</span>

<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"C++"</span>, <span class="s2">"count"</span> : 61 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"Python"</span>, <span class="s2">"count"</span> : 25 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"HTML"</span>, <span class="s2">"count"</span> : 12 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"Java"</span>, <span class="s2">"count"</span> : 12 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"Shell"</span>, <span class="s2">"count"</span> : 10 <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-language-sumstargazers_count-as-stars-description-from-repos-group-by-language-order-by-stars">select language, sum(stargazers_count) as stars, description from repos group by language order by stars</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.aggregate<span class="o">([{</span> <span class="nv">$group</span>: <span class="o">{</span> _id: <span class="s2">"</span><span class="nv">$language</span><span class="s2">"</span>, stars: <span class="o">{</span> <span class="nv">$sum</span>: <span class="s2">"</span><span class="nv">$stargazers_count</span><span class="s2">"</span> <span class="o">}</span> <span class="o">}</span> <span class="o">}</span>,<span class="o">{</span> <span class="nv">$sort</span>: <span class="o">{</span> stars: <span class="nt">-1</span> <span class="o">}</span> <span class="o">}])</span>

<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"C++"</span>, <span class="s2">"stars"</span> : 72 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : null, <span class="s2">"stars"</span> : 52 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"Python"</span>, <span class="s2">"stars"</span> : 47 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"Shell"</span>, <span class="s2">"stars"</span> : 43 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"HTML"</span>, <span class="s2">"stars"</span> : 19 <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-substrcreated_at-0-4-as-created_at_year-from-repos-order-by-created_at_year-desc">select name, substr(created_at, 0, 4) as created_at_year from repos order by created_at_year desc</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.aggregate<span class="o">([{</span><span class="nv">$addFields</span>:<span class="o">{</span><span class="s2">"created_at_year"</span>:<span class="o">{</span><span class="nv">$substr</span>:[<span class="s2">"</span><span class="nv">$created_at</span><span class="s2">"</span>, 0, 4]<span class="o">}}}</span>, <span class="o">{</span><span class="nv">$project</span>: <span class="o">{</span>_id:0, name:1, created_at_year:1<span class="o">}}</span>, <span class="o">{</span><span class="nv">$sort</span>: <span class="o">{</span>created_at_year:-1<span class="o">}}])</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"created_at_year"</span> : <span class="s2">"2020"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"gitfolio"</span>, <span class="s2">"created_at_year"</span> : <span class="s2">"2020"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"messenger-bot"</span>, <span class="s2">"created_at_year"</span> : <span class="s2">"2020"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"urctl"</span>, <span class="s2">"created_at_year"</span> : <span class="s2">"2020"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"annoying-bn-text"</span>, <span class="s2">"created_at_year"</span> : <span class="s2">"2019"</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"esp32-mqtt-ir-remote"</span>, <span class="s2">"created_at_year"</span> : <span class="s2">"2019"</span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-substrcreated_at-0-4-as-year-count-as-count-from-repos-group-by-year-order-by-count-desc">select substr(created_at, 0, 4)) as year, count(*) as count from repos group by year order by count desc</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.aggregate<span class="o">([{</span><span class="nv">$addFields</span>:<span class="o">{</span><span class="s2">"created_at_year"</span>:<span class="o">{</span><span class="nv">$substr</span>:[<span class="s2">"</span><span class="nv">$created_at</span><span class="s2">"</span>, 0, 4]<span class="o">}}}</span>, <span class="o">{</span> <span class="nv">$group</span>: <span class="o">{</span> _id: <span class="s2">"</span><span class="nv">$created_at_year</span><span class="s2">"</span>, count: <span class="o">{</span> <span class="nv">$sum</span>: 1 <span class="o">}</span> <span class="o">}</span> <span class="o">}</span>,<span class="o">{</span> <span class="nv">$sort</span>: <span class="o">{</span> count: <span class="nt">-1</span> <span class="o">}</span> <span class="o">}])</span>

<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"2015"</span>, <span class="s2">"count"</span> : 41 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"2016"</span>, <span class="s2">"count"</span> : 35 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"2012"</span>, <span class="s2">"count"</span> : 18 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"2014"</span>, <span class="s2">"count"</span> : 14 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"2013"</span>, <span class="s2">"count"</span> : 12 <span class="o">}</span>
<span class="o">{</span> <span class="s2">"_id"</span> : <span class="s2">"2019"</span>, <span class="s2">"count"</span> : 10 <span class="o">}</span>
</code></pre></div></div>

<h3 id="select-name-unix_timestampstr_to_datecreated_at-y-m-dthmsz-from-repos">select name, unix_timestamp(str_to_date(created_at, ‘%Y-%M-%dT%h:%m:%sz’)) from repos</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.aggregate<span class="o">([{</span><span class="nv">$addFields</span>: <span class="o">{</span><span class="nb">date</span>: <span class="o">{</span> <span class="nv">$dateFromString</span>: <span class="o">{</span> dateString: <span class="s2">"</span><span class="nv">$created_at</span><span class="s2">"</span> <span class="o">}}}}</span>, <span class="o">{</span><span class="nv">$project</span>: <span class="o">{</span>_id:0, created_at_usec: <span class="o">{</span> <span class="nv">$subtract</span>: <span class="o">[</span> <span class="s2">"</span><span class="nv">$date</span><span class="s2">"</span>, new Date<span class="o">(</span><span class="s2">"1970-01-01"</span><span class="o">)</span> <span class="o">]</span> <span class="o">}</span>, name:1<span class="o">}}])</span>

<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"a-pdf-reader"</span>, <span class="s2">"created_at_usec"</span> : NumberLong<span class="o">(</span><span class="s2">"1349642688000"</span><span class="o">)</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"apt-sync"</span>, <span class="s2">"created_at_usec"</span> : NumberLong<span class="o">(</span><span class="s2">"1511067443000"</span><span class="o">)</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"aws-cli-cheatsheet"</span>, <span class="s2">"created_at_usec"</span> : NumberLong<span class="o">(</span><span class="s2">"1582821501000"</span><span class="o">)</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"banglalion-wimax-mac"</span>, <span class="s2">"created_at_usec"</span> : NumberLong<span class="o">(</span><span class="s2">"1424891748000"</span><span class="o">)</span> <span class="o">}</span>
<span class="o">{</span> <span class="s2">"name"</span> : <span class="s2">"annoying-bn-text"</span>, <span class="s2">"created_at_usec"</span> : NumberLong<span class="o">(</span><span class="s2">"1559755505000"</span><span class="o">)</span> <span class="o">}</span>
</code></pre></div></div>

<h2 id="delete">DELETE</h2>

<h3 id="delete-from-repose-where-language--c">delete from repose where language = “C++”</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.remove<span class="o">({</span>language:<span class="s2">"C++"</span><span class="o">})</span>
</code></pre></div></div>

<h2 id="alter">ALTER</h2>

<h3 id="alter-table-repos-drop-column-created_at">alter table repos drop column created_at</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.update<span class="o">({}</span>,<span class="o">{</span><span class="nv">$unset</span>:<span class="o">{</span>created_at:<span class="s2">""</span><span class="o">}})</span>
</code></pre></div></div>

<h3 id="alter-table-repos-insert-column-foo-int">alter table repos insert column foo int</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> db.repos.update<span class="o">({}</span>, <span class="o">{</span><span class="nv">$set</span>: <span class="o">{</span>foo:0<span class="o">}}</span>, <span class="o">{</span>multi:1<span class="o">})</span>
</code></pre></div></div>

<p>That’s all for today. Feel free to share if any of the queries can be improved. Thanks for reading.</p>]]></content><author><name></name></author><category term="mongodb" /><summary type="html"><![CDATA[I am a MySQL guy. I can query MySQL, BigQuery or SQL-like databases for my day to day business. Last week, I faced a challenge where I needed to extract some information from a production MongoDB server that involves aggregation. I had no idea how MongoDB works or how to run CRUD operation on such database. So obviously, I spent my whole weekend in learning MongoDB. In this post I am going to share the MongoDB queries I learnt, and the equivalent MySQL queries as well.]]></summary></entry><entry><title type="html">AWS CLI Cheatsheet</title><link href="https://bits.mdminhazulhaque.io/aws/aws-cli-cheatsheet.html" rel="alternate" type="text/html" title="AWS CLI Cheatsheet" /><published>2020-03-28T00:00:00+06:00</published><updated>2020-03-28T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/aws/aws-cli-cheatsheet</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/aws/aws-cli-cheatsheet.html"><![CDATA[<p>I heavily rely on CLI tools rather than GUI/Web interface. AWS CLI is a great tool to manage AWS resources across different accounts, regions and environments.</p>

<p>I have published a curated list of frequent AWS commands that might come handy. Feel free to star it, fork it or send pull request.</p>

<blockquote>
  <p><a href="https://github.com/mdminhazulhaque/aws-cli-cheatsheet">mdminhazulhaque/aws-cli-cheatsheet</a></p>
</blockquote>

<h3 id="tools-required">Tools Required</h3>

<ul>
  <li>aws https://aws.amazon.com/cli/</li>
  <li>jq https://stedolan.github.io/jq/</li>
</ul>

<p>Disclaimer: All Resource, Account, ARN, Hostname etc are generated using <a href="https://faker.readthedocs.io/en/master">Faker</a>. They do not match any real user data.</p>

<h3 id="table-of-contents">Table of Contents</h3>

<ul>
  <li><a href="#ec2">EC2</a>
    <ul>
      <li><a href="#list-instance-id-type-and-name">List Instance ID, Type and Name</a></li>
      <li><a href="#list-instances-with-public-ip-address-and-name">List Instances with Public IP Address and Name</a></li>
      <li><a href="#list-of-vpcs-and-cidr-ip-block">List of VPCs and CIDR IP Block</a></li>
      <li><a href="#list-of-subnets-for-a-vpc">List of Subnets for a VPC</a></li>
      <li><a href="#list-of-security-groups">List of Security Groups</a></li>
      <li><a href="#print-security-groups-for-an-instance">Print Security Groups for an Instance</a></li>
      <li><a href="#edit-security-groups-of-an-instance">Edit Security Groups of an Instance</a></li>
      <li><a href="#print-security-group-rules-as-fromaddress-and-toport">Print Security Group Rules as FromAddress and ToPort</a></li>
      <li><a href="#add-rule-to-security-group">Add Rule to Security Group</a></li>
      <li><a href="#delete-rule-from-security-group">Delete Rule from Security Group</a></li>
      <li><a href="#edit-rules-of-security-group">Edit Rules of Security Group</a></li>
      <li><a href="#delete-security-group">Delete Security Group</a></li>
    </ul>
  </li>
  <li><a href="#s3">S3</a>
    <ul>
      <li><a href="#list-buckets">List Buckets</a></li>
      <li><a href="#list-files-in-a-bucket">List Files in a Bucket</a></li>
      <li><a href="#create-bucket">Create Bucket</a></li>
      <li><a href="#delete-bucket">Delete Bucket</a></li>
      <li><a href="#download-s3-object-to-local">Download S3 Object to Local</a></li>
      <li><a href="#upload-local-file-as-s3-object">Upload Local File as S3 Object</a></li>
      <li><a href="#delete-s3-object">Delete S3 Object</a></li>
      <li><a href="#download-bucket-to-local">Download Bucket to Local</a></li>
      <li><a href="#upload-local-directory-to-bucket">Upload Local Directory to Bucket</a></li>
      <li><a href="#share-s3-object-without-public-access">Share S3 Object without Public Access</a></li>
    </ul>
  </li>
  <li><a href="#api-gateway">API Gateway</a>
    <ul>
      <li><a href="#list-of-api-gateway-ids-and-names">List of API Gateway IDs and Names</a></li>
      <li><a href="#list-of-api-gateway-keys">List of API Gateway Keys</a></li>
      <li><a href="#list-api-gateway-domain-names">List API Gateway Domain Names</a></li>
      <li><a href="#list-of-resources-for-api-gateway">List of Resources for API Gateway</a></li>
      <li><a href="#find-lambda-for-api-gateway-resource">Find Lambda for API Gateway Resource</a></li>
    </ul>
  </li>
  <li><a href="#elb">ELB</a>
    <ul>
      <li><a href="#list-of-elb-hostnames">List of ELB Hostnames</a></li>
      <li><a href="#list-of-elb-arns">List of ELB ARNs</a></li>
      <li><a href="#list-of-elb-target-group-arns">List of ELB Target Group ARNs</a></li>
      <li><a href="#find-instances-for-a-target-group">Find Instances for a Target Group</a></li>
    </ul>
  </li>
  <li><a href="#rds">RDS</a>
    <ul>
      <li><a href="#list-of-db-clusters">List of DB Clusters</a></li>
      <li><a href="#list-of-db-instances">List of DB Instances</a></li>
      <li><a href="#take-db-instance-snapshot">Take DB Instance Snapshot</a></li>
      <li><a href="#take-db-cluster-snapshot">Take DB Cluster Snapshot</a></li>
    </ul>
  </li>
  <li><a href="#elasticache">ElastiCache</a>
    <ul>
      <li><a href="#list-of-elasticache-machine-type-and-name">List of ElastiCache Machine Type and Name</a></li>
      <li><a href="#list-of-elasticache-replication-groups">List of ElastiCache Replication Groups</a></li>
      <li><a href="#list-of-elasticache-snapshots">List of ElastiCache Snapshots</a></li>
      <li><a href="#create-elasticache-snapshot">Create ElastiCache Snapshot</a></li>
      <li><a href="#delete-elasticache-snapshot">Delete ElastiCache Snapshot</a></li>
      <li><a href="#scale-updown-elasticache-replica">Scale Up/Down ElastiCache Replica</a></li>
    </ul>
  </li>
  <li><a href="#lambda">Lambda</a>
    <ul>
      <li><a href="#list-of-lambda-functions-runtime-and-memory">List of Lambda Functions, Runtime and Memory</a></li>
      <li><a href="#list-of-lambda-layers">List of Lambda Layers</a></li>
      <li><a href="#list-of-source-event-for-lambda">List of Source Event for Lambda</a></li>
      <li><a href="#download-lambda-code">Download Lambda Code</a></li>
    </ul>
  </li>
  <li><a href="#cloudwatch">Cloudwatch</a>
    <ul>
      <li><a href="#list-of-cloudwatch-alarms-and-status">List of CloudWatch Alarms and Status</a></li>
      <li><a href="#create-alarm-for-ec2-high-cpuutilization">Create Alarm for EC2 High CPUUtilization</a></li>
      <li><a href="#create-alarm-for-ec2-high-statuscheckfailed_instance">Create Alarm for EC2 High StatusCheckFailed_Instance</a></li>
    </ul>
  </li>
  <li><a href="#route53">Route53</a>
    <ul>
      <li><a href="#list-domains">List Domains</a></li>
      <li><a href="#list-records-for-a-domain-zone">List Records for a Domain (Zone)</a></li>
    </ul>
  </li>
  <li><a href="#sns">SNS</a>
    <ul>
      <li><a href="#list-of-sns-topics">List of SNS Topics</a></li>
      <li><a href="#list-of-sns-topic-and-related-subscriptions">List of SNS Topic and related Subscriptions</a></li>
      <li><a href="#publish-to-sns-topic">Publish to SNS Topic</a></li>
    </ul>
  </li>
  <li><a href="#dynamodb">DynamoDB</a>
    <ul>
      <li><a href="#list-of-dynamodb-tables">List of DynamoDB Tables</a></li>
      <li><a href="#get-all-items-from-a-table">Get All Items from a Table</a></li>
      <li><a href="#get-item-count-from-a-table">Get Item Count from a Table</a></li>
      <li><a href="#get-item-using-key">Get Item using Key</a></li>
      <li><a href="#get-specific-fields-from-an-item">Get Specific Fields from an Item</a></li>
      <li><a href="#delete-item-using-key">Delete Item using Key</a></li>
    </ul>
  </li>
  <li><a href="#sqs">SQS</a>
    <ul>
      <li><a href="#list-queues">List Queues</a></li>
      <li><a href="#create-queue">Create Queue</a></li>
      <li><a href="#count-messages-in-queue">Count Messages in Queue</a></li>
      <li><a href="#send-message">Send Message</a></li>
      <li><a href="#receive-message">Receive Message</a></li>
      <li><a href="#delete-message">Delete Message</a></li>
      <li><a href="#purge-queue">Purge Queue</a></li>
      <li><a href="#delete-queue">Delete Queue</a></li>
    </ul>
  </li>
  <li><a href="#cloudfront">CloudFront</a>
    <ul>
      <li><a href="#list-of-cloudfront-distributions-and-origins">List of CloudFront Distributions and Origins</a></li>
      <li><a href="#create-cache-invalidation">Create Cache Invalidation</a></li>
      <li><a href="#check-cache-invalidation-status">Check Cache Invalidation Status</a></li>
    </ul>
  </li>
  <li><a href="#amplify">Amplify</a>
    <ul>
      <li><a href="#list-of-amplify-apps-and-source-repository">List of Amplify Apps and Source Repository</a></li>
    </ul>
  </li>
  <li><a href="#cognito">Cognito</a>
    <ul>
      <li><a href="#list-of-user-pool-ids-and-names">List of User Pool IDs and Names</a></li>
      <li><a href="#list-of-phone-and-email-of-all-users">List of Phone and Email of All Users</a></li>
    </ul>
  </li>
  <li><a href="#iam-user">IAM User</a>
    <ul>
      <li><a href="#list-of-userid-and-username">List of UserId and UserName</a></li>
      <li><a href="#get-single-user">Get Single User</a></li>
      <li><a href="#add-user">Add User</a></li>
      <li><a href="#delete-user">Delete User</a></li>
      <li><a href="#list-access-keys-for-user">List Access Keys for User</a></li>
      <li><a href="#delete-access-key-for-user">Delete Access Key for User</a></li>
      <li><a href="#activatedeactivate-access-key-for-user">Activate/Deactivate Access Key for User</a></li>
      <li><a href="#generate-new-access-key-for-user">Generate New Access Key for User</a></li>
    </ul>
  </li>
  <li><a href="#iam-group">IAM Group</a>
    <ul>
      <li><a href="#list-groups">List Groups</a></li>
      <li><a href="#adddelete-groups">Add/Delete Groups</a></li>
      <li><a href="#list-of-policies-and-arns">List of Policies and ARNs</a></li>
      <li><a href="#list-of-usergrouproles-for-a-policy">List of User/Group/Roles for a Policy</a></li>
      <li><a href="#list-policies-for-a-group">List Policies for a Group</a></li>
      <li><a href="#add-policy-to-a-group">Add Policy to a Group</a></li>
      <li><a href="#add-user-to-a-group">Add User to a Group</a></li>
      <li><a href="#remove-user-from-a-group">Remove User from a Group</a></li>
      <li><a href="#list-users-in-a-group">List Users in a Group</a></li>
      <li><a href="#list-groups-for-a-user">List Groups for a User</a></li>
      <li><a href="#attachdetach-policy-to-a-group">Attach/Detach Policy to a Group</a></li>
    </ul>
  </li>
</ul>

<h3 id="pro-tip">Pro Tip!</h3>

<p>If you have multiple AWS Accounts, you can use bash alias like the following. So you no longer need to pass <code class="language-plaintext highlighter-rouge">--profile</code> to <code class="language-plaintext highlighter-rouge">aws</code> tool.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span>aws-prod<span class="o">=</span><span class="s2">"aws --profile work-prod"</span>
<span class="nb">alias </span>aws-dev<span class="o">=</span><span class="s2">"aws --profile work-dev"</span>
<span class="nb">alias </span>aws-self<span class="o">=</span><span class="s2">"aws --profile personal"</span>
<span class="nb">alias </span><span class="nv">aws</span><span class="o">=</span><span class="s2">"aws --profile work-dev"</span>
</code></pre></div></div>

<p>To format <code class="language-plaintext highlighter-rouge">aws</code> command output into tables, you can pipe output to <code class="language-plaintext highlighter-rouge">column -t</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># aws ec2 describe-instances | jq ...
i-0f112d652ecf13dac c3.x2large fisher.com
i-0b3b5128445a332db t2.nano robinson.com

# aws ec2 describe-instances | jq ... | column -t
i-0f112d652ecf13dac  c3.x2large  fisher.com
i-0b3b5128445a332db  t2.nano     robinson.com
</code></pre></div></div>

<h2 id="ec2">EC2</h2>

<h4 id="list-instance-id-type-and-name">List Instance ID, Type and Name</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-instances | jq <span class="nt">-r</span> <span class="s1">'.Reservations[].Instances[]|.InstanceId+" "+.InstanceType+" "+(.Tags[] | select(.Key == "Name").Value)'</span>
i-0f112d652ecf13dac  c3.xlarge  fisher.com
i-0b3b5128445a332db  t2.nano    robinson.com
i-0d1c1cf4e980ac593  t2.micro   nolan.com
i-004ee6b792c3b6914  t2.nano    grimes-green.net
i-00f11e8e33c971058  t2.nano    garrett.com
</code></pre></div></div>

<h4 id="list-instances-with-public-ip-address-and-name">List Instances with Public IP Address and Name</h4>
<p>Tip: You can directly put this to your <code class="language-plaintext highlighter-rouge">/etc/hosts</code></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-instances <span class="nt">--query</span> <span class="s1">'Reservations[*].Instances[?not_null(PublicIpAddress)]'</span> | jq <span class="nt">-r</span> <span class="s1">'.[][]|.PublicIpAddress+" "+(.Tags[]|select(.Key=="Name").Value)'</span>
223.64.72.64    fisher.com
198.82.207.161  robinson.com
182.139.20.233  nolan.com
153.134.83.44   grimes-green.net
202.32.63.121   garrett.com
</code></pre></div></div>

<h4 id="list-of-vpcs-and-cidr-ip-block">List of VPCs and CIDR IP Block</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-vpcs | jq <span class="nt">-r</span> <span class="s1">'.Vpcs[]|.VpcId+" "+(.Tags[]|select(.Key=="Name").Value)+" "+.CidrBlock'</span>
vpc-0d1c1cf4e980ac593  frontend-vpc  10.0.0.0/16
vpc-00f11e8e33c971058  backend-vpc   172.31.0.0/16
</code></pre></div></div>
<h4 id="list-of-subnets-for-a-vpc">List of Subnets for a VPC</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-subnets <span class="nt">--filter</span> <span class="nv">Name</span><span class="o">=</span>vpc-id,Values<span class="o">=</span>vpc-0d1c1cf4e980ac593 | jq <span class="nt">-r</span> <span class="s1">'.Subnets[]|.SubnetId+" "+.CidrBlock+" "+(.Tags[]|select(.Key=="Name").Value)'</span>
subnet-0dae5d4daa47fe4a2  10.0.128.0/20  Public Subnet 1
subnet-0641a25faccb01f0f  10.0.32.0/19   Private Subnet 2
subnet-09fb8038641f1f36f  10.0.0.0/19    Private Subnet 1
subnet-02a63c67684d8deed  10.0.144.0/20  Public Subnet 2
</code></pre></div></div>

<h4 id="list-of-security-groups">List of Security Groups</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-security-groups | jq <span class="nt">-r</span> <span class="s1">'.SecurityGroups[]|.GroupId+" "+.GroupName'</span>
sg-02a63c67684d8deed  backend-db
sg-0dae5d4daa47fe4a2  backend-redis
sg-0a56bff7b12264282  frontend-lb
sg-0641a25faccb01f0f  frontend-https
sg-09fb8038641f1f36f  internal-ssh
</code></pre></div></div>

<h4 id="print-security-groups-for-an-instance">Print Security Groups for an Instance</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-instances <span class="nt">--instance-ids</span> i-0dae5d4daa47fe4a2 | jq <span class="nt">-r</span> <span class="s1">'.Reservations[].Instances[].SecurityGroups[]|.GroupId+" "+.GroupName'</span>
sg-02a63c67684d8deed  backend-db
sg-0dae5d4daa47fe4a2  backend-redis
</code></pre></div></div>

<h4 id="edit-security-groups-of-an-instance">Edit Security Groups of an Instance</h4>
<p>You have to provide existing Security Group IDs as well</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 modify-instance-attribute <span class="nt">--instance-id</span> i-0dae5d4daa47fe4a2 <span class="nt">--groups</span> sg-02a63c67684d8deed sg-0dae5d4daa47fe4a2
</code></pre></div></div>

<h4 id="print-security-group-rules-as-fromaddress-and-toport">Print Security Group Rules as FromAddress and ToPort</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 describe-security-groups <span class="nt">--group-ids</span> sg-02a63c67684d8deed | jq <span class="nt">-r</span> <span class="s1">'.SecurityGroups[].IpPermissions[]|. as $parent|(.IpRanges[].CidrIp+" "+($parent.ToPort|tostring))'</span>
223.64.72.64/32    3306
198.82.207.161/32  3306
168.244.58.160/32  3306
202.0.149.202/32   3306
212.143.80.102/32  3306
</code></pre></div></div>

<h4 id="add-rule-to-security-group">Add Rule to Security Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 authorize-security-group-ingress <span class="nt">--group-id</span> sg-02a63c67684d8deed <span class="nt">--protocol</span> tcp <span class="nt">--port</span> 443 <span class="nt">--cidr</span> 35.0.0.1
</code></pre></div></div>

<h4 id="delete-rule-from-security-group">Delete Rule from Security Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 revoke-security-group-ingress <span class="nt">--group-id</span> sg-02a63c67684d8deed <span class="nt">--protocol</span> tcp <span class="nt">--port</span> 443 <span class="nt">--cidr</span> 35.0.0.1
</code></pre></div></div>

<h4 id="edit-rules-of-security-group">Edit Rules of Security Group</h4>
<p>You have to provide All IP Ranges as well</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 update-security-group-rule-descriptions-ingress <span class="nt">--group-id</span> sg-02a63c67684d8deed <span class="nt">--ip-permissions</span> <span class="s1">'ToPort=443,IpProtocol=tcp,IpRanges=[{CidrIp=202.171.186.133/32,Description=Home}]'</span>
</code></pre></div></div>

<h4 id="delete-security-group">Delete Security Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws ec2 delete-security-group <span class="nt">--group-id</span> sg-02a63c67684d8deed
</code></pre></div></div>

<h2 id="s3">S3</h2>

<h4 id="list-buckets">List Buckets</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">ls
</span>2020-01-28 18:49:50 customer-data-primary
2020-01-28 18:50:22 customer-data-backup
2020-01-28 18:50:54 wordpress-cdn
2020-01-28 18:52:25 backend-artifacts-20200220-deployment
</code></pre></div></div>
<h4 id="list-files-in-a-bucket">List Files in a Bucket</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">ls </span>wordpress-cdn/wp-content/uploads/2019/10/04/
2019-10-04 15:02:02     133557 amazing-content.jpg
2019-10-04 15:02:02       2986 amazing-content-103x50.jpg
2019-10-04 15:02:02       5640 amazing-content-120x120.jpg
2019-10-04 15:02:02       7924 amazing-content-150x150.jpg
</code></pre></div></div>

<h4 id="create-bucket">Create Bucket</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 mb s3://my-awesome-new-bucket
make_bucket: my-awesome-new-bucket
</code></pre></div></div>
<h4 id="delete-bucket">Delete Bucket</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 rb s3://my-awesome-new-bucket <span class="nt">--force</span>
</code></pre></div></div>

<h4 id="download-s3-object-to-local">Download S3 Object to Local</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">cp </span>s3://my-awesome-new-bucket <span class="nb">.</span>
download: ./backup.tar from s3://my-awesome-new-bucket/backup.tar
</code></pre></div></div>

<h4 id="upload-local-file-as-s3-object">Upload Local File as S3 Object</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">cp </span>backup.tar s3://my-awesome-new-bucket
upload: ./backup.tar to s3://my-awesome-new-bucket/backup.tar
</code></pre></div></div>

<h4 id="delete-s3-object">Delete S3 Object</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">rm </span>s3://my-awesome-new-bucket/secret-file.gz <span class="nb">.</span>
delete: s3://my-awesome-new-bucket/secret-file.gz
</code></pre></div></div>

<h4 id="download-bucket-to-local">Download Bucket to Local</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">sync </span>s3://my-awesome-new-bucket/ /media/Passport-Ultra/Backup
</code></pre></div></div>

<h4 id="upload-local-directory-to-bucket">Upload Local Directory to Bucket</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">sync</span> /home/minhaz/Downloads s3://my-awesome-new-bucket/
</code></pre></div></div>

<h4 id="share-s3-object-without-public-access">Share S3 Object without Public Access</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 presign s3://my-awesome-new-bucket/business-reports.pdf <span class="nt">--expires-in</span> 3600
https://my-awesome-new-bucket.s3.amazonaws.com/business-reports.pdf?AWSAccessKeyId<span class="o">=</span>AKISUENSAKSIEUAA&amp;Expires<span class="o">=</span>1582876994&amp;Signature<span class="o">=</span>kizOEA93kaIHw7uv25wSFIKLmAx
</code></pre></div></div>

<h2 id="api-gateway">API Gateway</h2>

<h4 id="list-of-api-gateway-ids-and-names">List of API Gateway IDs and Names</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws apigateway get-rest-apis | jq <span class="nt">-r</span> <span class="s1">'.items[] | .id+" "+.name'</span>
5e3221cf8  backend-api
69ef7d4c8  frontend-api
bb1e3c281  partner-api
f99796943  internal-crm-api
ee86b4cde  import-data-api
</code></pre></div></div>

<h4 id="list-of-api-gateway-keys">List of API Gateway Keys</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws apigateway get-api-keys | jq <span class="nt">-r</span> <span class="s1">'.items[] | .id+" "+.name'</span>
ee86b4cde   backend-api-key
69ef7d4c8   partner-api-key
</code></pre></div></div>

<h4 id="list-api-gateway-domain-names">List API Gateway Domain Names</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws apigateway get-domain-names | jq <span class="nt">-r</span> <span class="s1">'.items[] | .domainName+" "+.regionalDomainName'</span>
backend-api.mdminhazulhaque.io   d-ee86b4cde.execute-api.ap-southeast-1.amazonaws.com
frontend-api.mdminhazulhaque.io  d-bb1e3c281.execute-api.ap-southeast-1.amazonaws.com
</code></pre></div></div>

<h4 id="list-of-resources-for-api-gateway">List of Resources for API Gateway</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws apigateway get-resources <span class="nt">--rest-api-id</span> ee86b4cde  | jq <span class="nt">-r</span> <span class="s1">'.items[] | .id+" "+.path'</span>
ee86b4cde  /<span class="o">{</span>proxy+<span class="o">}</span>
69ef7d4c8  /
</code></pre></div></div>

<h4 id="find-lambda-for-api-gateway-resource">Find Lambda for API Gateway Resource</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws apigateway get-integration <span class="nt">--rest-api-id</span> ee86b4cde <span class="nt">--resource-id</span> 69ef7d4c8 <span class="nt">--http-method</span> GET | jq <span class="nt">-r</span> <span class="s1">'.uri'</span>
arn:aws:lambda:ap-southeast-1:987654321:function:backend-api-function-5d4daa47fe4a2:live/invocations
</code></pre></div></div>

<h2 id="elb">ELB</h2>

<h4 id="list-of-elb-hostnames">List of ELB Hostnames</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elbv2 describe-load-balancers <span class="nt">--query</span> <span class="s1">'LoadBalancers[*].DNSName'</span>  | jq <span class="nt">-r</span> <span class="s1">'to_entries[] | .value'</span>
frontend-lb-1220186848339.ap-southeast-1.elb.amazonaws.com
backend-lb-6208709163457.ap-southeast-1.elb.amazonaws.com
</code></pre></div></div>
<h4 id="list-of-elb-arns">List of ELB ARNs</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elbv2 describe-load-balancers | jq <span class="nt">-r</span> <span class="s1">'.LoadBalancers[] | .LoadBalancerArn'</span>
arn:aws:elasticloadbalancing:ap-southeast-1:987654321:loadbalancer/app/frontend-lb/1220186848339
arn:aws:elasticloadbalancing:ap-southeast-1:987654321:loadbalancer/app/backend-lb/6208709163457
</code></pre></div></div>

<h4 id="list-of-elb-target-group-arns">List of ELB Target Group ARNs</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elbv2 describe-target-groups | jq <span class="nt">-r</span> <span class="s1">'.TargetGroups[] | .TargetGroupArn'</span>
arn:aws:elasticloadbalancing:ap-southeast-1:987654321:targetgroup/frontend/b6da07d35
arn:aws:elasticloadbalancing:ap-southeast-1:987654321:targetgroup/backend/97ad3b13c
</code></pre></div></div>

<h4 id="find-instances-for-a-target-group">Find Instances for a Target Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elbv2 describe-target-health <span class="nt">--target-group-arn</span> arn:aws:elasticloadbalancing:ap-southeast-1:987654321:targetgroup/wordpress-ph/88f517d6b5326a26 | jq <span class="nt">-r</span> <span class="s1">'.TargetHealthDescriptions[] | .Target.Id'</span>
i-0b3b5128445a332db
i-0d1c1cf4e980ac593
i-00f11e8e33c971058
</code></pre></div></div>

<h2 id="rds">RDS</h2>

<h4 id="list-of-db-clusters">List of DB Clusters</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws rds describe-db-clusters | jq <span class="nt">-r</span> <span class="s1">'.DBClusters[] | .DBClusterIdentifier+" "+.Endpoint'</span>
backend-prod   backend-prod.cluster-b6da07d35.ap-southeast-1.rds.amazonaws.com
internal-prod  internal-dev.cluster-b6da07d35.ap-southeast-1.rds.amazonaws.com
</code></pre></div></div>

<h4 id="list-of-db-instances">List of DB Instances</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws rds describe-db-instances | jq <span class="nt">-r</span> <span class="s1">'.DBInstances[] | .DBInstanceIdentifier+" "+.DBInstanceClass+" "+.Endpoint.Address'</span>
backend-dev   db.t3.medium  backend-prod.b6da07d35.ap-southeast-1.rds.amazonaws.com
internal-dev  db.t2.micro   internal-dev.b6da07d35.ap-southeast-1.rds.amazonaws.com
</code></pre></div></div>

<h4 id="take-db-instance-snapshot">Take DB Instance Snapshot</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws rds create-db-snapshot <span class="nt">--db-snapshot-identifier</span> backend-dev-snapshot-0001 <span class="nt">--db-instance-identifier</span> backend-dev
aws rds describe-db-snapshots <span class="nt">--db-snapshot-identifier</span> backend-dev-snapshot-0001 <span class="nt">--db-instance-identifier</span> general
</code></pre></div></div>

<h4 id="take-db-cluster-snapshot">Take DB Cluster Snapshot</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws rds create-db-cluster-snapshot <span class="nt">--db-cluster-snapshot-identifier</span> backend-prod-snapshot-0002 <span class="nt">--db-cluster-identifier</span> backend-prod
aws rds describe-db-cluster-snapshots <span class="nt">--db-cluster-snapshot-identifier</span> backend-prod-snapshot-0002 <span class="nt">--db-cluster-identifier</span> backend-prod
</code></pre></div></div>

<h2 id="elasticache">ElastiCache</h2>

<h4 id="list-of-elasticache-machine-type-and-name">List of ElastiCache Machine Type and Name</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elasticache describe-cache-clusters | jq <span class="nt">-r</span> <span class="s1">'.CacheClusters[] | .CacheNodeType+" "+.CacheClusterId'</span>
cache.t2.micro  backend-login-hk
cache.t2.micro  backend-login-vn
cache.t2.micro  backend-login-sg
</code></pre></div></div>

<h4 id="list-of-elasticache-replication-groups">List of ElastiCache Replication Groups</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elasticache describe-replication-groups | jq <span class="nt">-r</span> <span class="s1">'.ReplicationGroups[] | .ReplicationGroupId+" "+.NodeGroups[].PrimaryEndpoint.Address'</span>
backend-login-hk backend-login-hk.6da35.ng.0001.apse1.cache.amazonaws.com
backend-login-vn backend-login-vn.6da35.ng.0001.apse1.cache.amazonaws.com
backend-login-sg backend-login-sg.6da35.ng.0001.apse1.cache.amazonaws.com
</code></pre></div></div>

<h4 id="list-of-elasticache-snapshots">List of ElastiCache Snapshots</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elasticache describe-snapshots | jq <span class="nt">-r</span> <span class="s1">'.Snapshots[] | .SnapshotName'</span>
automatic.backend-login-hk-2020-02-27-00-27
automatic.backend-login-vn-2020-02-27-00-27
automatic.backend-login-sg-2020-02-27-00-27
</code></pre></div></div>

<h4 id="create-elasticache-snapshot">Create ElastiCache Snapshot</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elasticache create-snapshot <span class="nt">--snapshot-name</span> backend-login-hk-snap-0001 <span class="nt">--replication-group-id</span> backend-login-hk <span class="nt">--cache-cluster-id</span> backend-login-hk
</code></pre></div></div>

<h4 id="delete-elasticache-snapshot">Delete ElastiCache Snapshot</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elasticache delete-snapshot <span class="nt">--snapshot-name</span> backend-login-hk-snap-0001
</code></pre></div></div>

<h4 id="scale-updown-elasticache-replica">Scale Up/Down ElastiCache Replica</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws elasticache increase-replica-count <span class="nt">--replication-group-id</span> backend-login-hk <span class="nt">--apply-immediately</span>
aws elasticache decrease-replica-count <span class="nt">--replication-group-id</span> backend-login-hk <span class="nt">--apply-immediately</span>
</code></pre></div></div>

<h2 id="lambda">Lambda</h2>

<h4 id="list-of-lambda-functions-runtime-and-memory">List of Lambda Functions, Runtime and Memory</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws lambda list-functions | jq <span class="nt">-r</span> <span class="s1">'.Functions[] | .FunctionName+" "+.Runtime+" "+(.MemorySize|tostring)'</span>
backend-api-function           nodejs8.10  512
backend-signup-email-function  nodejs10.x  128
partner-api-8XJAP1VVLYA7       python3.7   128
marketing-promo-sqs-function   nodejs10.x  128
</code></pre></div></div>

<h4 id="list-of-lambda-layers">List of Lambda Layers</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws lambda list-layers | jq <span class="nt">-r</span> <span class="s1">'.Layers[] | .LayerName'</span>
imagemagik-layer
django-layer
nodejs-extra-layer
</code></pre></div></div>

<h4 id="list-of-source-event-for-lambda">List of Source Event for Lambda</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws lambda list-event-source-mappings | jq <span class="nt">-r</span> <span class="s1">'.EventSourceMappings[] | .FunctionArn+" "+.EventSourceArn'</span>
arn:aws:lambda:function:backend-api-function           arn:aws:dynamodb:table/prod-user-list/stream
arn:aws:lambda:function:backend-signup-email-function  arn:aws:dynamodb:table/prod-user-email/stream
arn:aws:lambda:function:partner-api-8XJAP1VVLYA7       arn:aws:sqs:partner-input-msg-queue
arn:aws:lambda:function:marketing-promo-sqs-function   arn:aws:sqs:promo-input-msg-queue
</code></pre></div></div>

<h4 id="download-lambda-code">Download Lambda Code</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws lambda get-function <span class="nt">--function-name</span> DynamoToSQS | jq <span class="nt">-r</span> .Code.Location
https://awslambda-ap-se-1-tasks.s3.ap-southeast-1.amazonaws.com/snapshots/987654321/backend-api-function-1fda0de7-a751-4586-bf64-5601a410c170
</code></pre></div></div>

<h2 id="cloudwatch">Cloudwatch</h2>

<h4 id="list-of-cloudwatch-alarms-and-status">List of CloudWatch Alarms and Status</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudwatch describe-alarms | jq <span class="nt">-r</span> <span class="s1">'.MetricAlarms[] | .AlarmName+" "+.Namespace+" "+.StateValue'</span>
backend-autoscale  AWS/EC2             OK
backend-lb         AWS/ApplicationELB  OK
partner-hk         AWS/ECS             ALARM
partner-vn         AWS/ECS             ALARM
partner-sg         AWS/ECS             ALARM
userdata-read      AWS/DynamoDB        OK
userdata-write     AWS/DynamoDB        OK
</code></pre></div></div>

<h4 id="create-alarm-for-ec2-high-cpuutilization">Create Alarm for EC2 High CPUUtilization</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudwatch put-metric-alarm <span class="nt">--alarm-name</span> high-cpu-usage <span class="nt">--alarm-description</span> <span class="s2">"Alarm when CPU exceeds 70 percent"</span> <span class="nt">--metric-name</span> CPUUtilization <span class="nt">--namespace</span> AWS/EC2 <span class="nt">--statistic</span> Average <span class="nt">--period</span> 300 <span class="nt">--threshold</span> 70 <span class="nt">--comparison-operator</span> GreaterThanThreshold  <span class="nt">--dimensions</span> <span class="s2">"Name=InstanceId,Value=i-123456789"</span> <span class="nt">--evaluation-periods</span> 2 <span class="nt">--alarm-actions</span> arn:aws:sns:ap-southeast-1:987654321:System-Alerts <span class="nt">--unit</span> Percent
</code></pre></div></div>

<h4 id="create-alarm-for-ec2-high-statuscheckfailed_instance">Create Alarm for EC2 High StatusCheckFailed_Instance</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudwatch put-metric-alarm <span class="nt">--alarm-name</span> EC2-StatusCheckFailed-AppServer <span class="nt">--alarm-description</span> <span class="s2">"EC2 StatusCheckFailed for AppServer"</span> <span class="nt">--metric-name</span> StatusCheckFailed_Instance <span class="nt">--namespace</span> AWS/EC2 <span class="nt">--statistic</span> Average <span class="nt">--period</span> 60 <span class="nt">--threshold</span> 0 <span class="nt">--comparison-operator</span> GreaterThanThreshold  <span class="nt">--dimensions</span> <span class="s2">"Name=InstanceId,Value=i-123456789"</span> <span class="nt">--evaluation-periods</span> 3 <span class="nt">--alarm-actions</span> arn:aws:sns:ap-southeast-1:987654321:System-Alerts <span class="nt">--unit</span> Count
</code></pre></div></div>

<h2 id="route53">Route53</h2>

<h4 id="list-domains">List Domains</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws route53 list-hosted-zones | jq <span class="nt">-r</span> <span class="s1">'.HostedZones[]|.Id+" "+.Name'</span>
/hostedzone/ZEB1PAH4U mysite.com.
/hostedzone/ZQUOHGH3G yoursite.com.
/hostedzone/ZEADEA0CO staywith.us.
</code></pre></div></div>

<h4 id="list-records-for-a-domain-zone">List Records for a Domain (Zone)</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws route53 list-resource-record-sets <span class="nt">--hosted-zone-id</span> /hostedzone/ZEB1PAH4U | jq <span class="nt">-r</span> <span class="s1">'.ResourceRecordSets[]| if (.AliasTarget!=null) then .Type+" "+.Name+" "+.AliasTarget.DNSName else .Type+" "+.Name+" "+.ResourceRecords[].Value end'</span>
A      mysite.com.              dualstack.mysite-lb-967522168.ap-southeast-1.elb.amazonaws.com.
A      mysite.com.              11.22.33.44
TXT    _amazonses.mysite.com.   6c6d761371f0480bbe60de0df275b550
A      test.mysite.com.         55.66.77.88
CNAME  www.mysite.com.          mysite.com
</code></pre></div></div>

<h2 id="sns">SNS</h2>

<h4 id="list-of-sns-topics">List of SNS Topics</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sns list-topics | jq <span class="nt">-r</span> <span class="s1">'.Topics[] | .TopicArn'</span>
arn:aws:sns:ap-southeast-1:987654321:backend-api-monitoring
arn:aws:sns:ap-southeast-1:987654321:dynamodb-count-check
arn:aws:sns:ap-southeast-1:987654321:partner-integration-check
arn:aws:sns:ap-southeast-1:987654321:autoscale-notifications
</code></pre></div></div>

<h4 id="list-of-sns-topic-and-related-subscriptions">List of SNS Topic and related Subscriptions</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sns list-subscriptions | jq <span class="nt">-r</span> <span class="s1">'.Subscriptions[] | .TopicArn+" "+.Protocol+" "+.Endpoint'</span>
arn:aws:sns:ap-southeast-1:autoscale-notifications    lambda  arn:aws:lambda:function:autoscale-function
arn:aws:sns:ap-southeast-1:backend-api-monitoring     email   alert@mdminhazulhaque.io
arn:aws:sns:ap-southeast-1:dynamodb-count-check       email   alert@mdminhazulhaque.io
arn:aws:sns:ap-southeast-1:partner-integration-check  lambda  arn:aws:lambda:function:partner-function
arn:aws:sns:ap-southeast-1:autoscale-notifications    lambda  arn:aws:lambda:function:autoscale-function
</code></pre></div></div>

<h4 id="publish-to-sns-topic">Publish to SNS Topic</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sns publish <span class="nt">--topic-arn</span> arn:aws:sns:ap-southeast-1:987654321:backend-api-monitoring <span class="se">\</span>
    <span class="nt">--message</span> <span class="s2">"Panic!!!"</span> <span class="se">\</span>
    <span class="nt">--subject</span> <span class="s2">"The API is down!!!"</span>
</code></pre></div></div>

<h2 id="dynamodb">DynamoDB</h2>

<h4 id="list-of-dynamodb-tables">List of DynamoDB Tables</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws dynamodb list-tables | jq <span class="nt">-r</span> .TableNames[]
userdata_hk
userdata_vn
userdata_sg
providers
events
</code></pre></div></div>

<h4 id="get-all-items-from-a-table">Get All Items from a Table</h4>
<p>This command will stream ALL items untill SIGINT is sent</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws dynamodb scan <span class="nt">--table-name</span> events 
</code></pre></div></div>

<h4 id="get-item-count-from-a-table">Get Item Count from a Table</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws dynamodb scan <span class="nt">--table-name</span> events <span class="nt">--select</span> COUNT | jq .ScannedCount
726119
</code></pre></div></div>

<h4 id="get-item-using-key">Get Item using Key</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws dynamodb get-item <span class="nt">--table-name</span> events <span class="nt">--key</span> <span class="s1">'{"email": {"S": "admin@mdminhazulhaque.io"}}'</span>
<span class="o">{</span>
    <span class="s2">"Item"</span>: <span class="o">{</span>
        <span class="s2">"email"</span>: <span class="o">{</span>
            <span class="s2">"S"</span>: <span class="s2">"admin@mdminhazulhaque.io"</span>
        <span class="o">}</span>,
        <span class="s2">"created_at"</span>: <span class="o">{</span>
            <span class="s2">"N"</span>: <span class="s2">"1554780667296"</span>
        <span class="o">}</span>,
        <span class="s2">"event_type"</span>: <span class="o">{</span>
            <span class="s2">"S"</span>: <span class="s2">"DISPATCHED"</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="get-specific-fields-from-an-item">Get Specific Fields from an Item</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws dynamodb get-item <span class="nt">--table-name</span> events <span class="nt">--key</span> <span class="s1">'{"email": {"S": "admin@mdminhazulhaque.io"}}'</span> <span class="nt">--attributes-to-get</span> event_type
<span class="o">{</span>
    <span class="s2">"Item"</span>: <span class="o">{</span>
        <span class="s2">"event_type"</span>: <span class="o">{</span>
            <span class="s2">"S"</span>: <span class="s2">"DISPATCHED"</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="delete-item-using-key">Delete Item using Key</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws dynamodb delete-item <span class="nt">--table-name</span> events <span class="nt">--key</span> <span class="s1">'{"email": {"S": "admin@mdminhazulhaque.io"}}'</span>
</code></pre></div></div>

<h2 id="sqs">SQS</h2>

<h4 id="list-queues">List Queues</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs list-queues | jq <span class="nt">-r</span> <span class="s1">'.QueueUrls[]'</span>
https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo
https://ap-southeast-1.queue.amazonaws.com/987654321/user-signup
</code></pre></div></div>

<h4 id="create-queue">Create Queue</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs create-queue <span class="nt">--queue-name</span> public-events.fifo | jq <span class="nt">-r</span> .QueueUrl
https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo
</code></pre></div></div>

<h4 id="count-messages-in-queue">Count Messages in Queue</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs get-queue-attributes <span class="nt">--queue-url</span> https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo | jq <span class="nt">-r</span> <span class="s1">'.Attributes | .QueueArn + " " + .ApproximateNumberOfMessages'</span>
arn:aws:sqs:ap-southeast-1:987654321:events.fifo 42
</code></pre></div></div>

<h4 id="send-message">Send Message</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs send-message <span class="nt">--queue-url</span> https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo <span class="nt">--message-body</span> Hello
<span class="o">{</span>
    <span class="s2">"MD5OfMessageBody"</span>: <span class="s2">"37b51d194a7513e45b56f6524f2d51f2"</span>,
    <span class="s2">"MessageId"</span>: <span class="s2">"4226398e-bab0-4bee-bf5a-8e7ae18c855a"</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="receive-message">Receive Message</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs receive-message <span class="nt">--queue-url</span> https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo | jq <span class="nt">-r</span> <span class="s1">'.Messages[] | .Body'</span>
Hello
</code></pre></div></div>

<h4 id="delete-message">Delete Message</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs delete-message <span class="nt">--queue-url</span> https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo <span class="nt">--receipt-handle</span> <span class="s2">"AQEBpqKLxNb8rIOn9ykSeCkKebNzn0BrEJ3Cg1RS6MwID2t1oYHCnMP06GnuVZGzt7kpWXZ5ieLQ=="</span>
</code></pre></div></div>

<h4 id="purge-queue">Purge Queue</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs purge-queue <span class="nt">--queue-url</span> https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo
</code></pre></div></div>

<h4 id="delete-queue">Delete Queue</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws sqs delete-queue <span class="nt">--queue-url</span> https://ap-southeast-1.queue.amazonaws.com/987654321/public-events.fifo
</code></pre></div></div>

<h2 id="cloudfront">CloudFront</h2>

<h4 id="list-of-cloudfront-distributions-and-origins">List of CloudFront Distributions and Origins</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudfront list-distributions | jq <span class="nt">-r</span> <span class="s1">'.DistributionList.Items[] | .DomainName+" "+.Origins.Items[0].DomainName'</span>
d9d5bb1e3c281f.cloudfront.net  frontend-prod-hk.s3.amazonaws.com
d12b09e8a0a996.cloudfront.net  frontend-prod-vn.s3.amazonaws.com
db64e7e9b3cc22.cloudfront.net  frontend-prod-sg.s3.amazonaws.com
d5e3221cf8b921.cloudfront.net  cdn.mdminhazulhaque.io
</code></pre></div></div>

<h4 id="create-cache-invalidation">Create Cache Invalidation</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudfront create-invalidation <span class="nt">--distribution-id</span> D12B09E8A0A996  <span class="nt">--path</span> /blog/<span class="se">\*</span> /blog/assets/<span class="se">\*</span> | jq <span class="nt">-r</span> <span class="s1">'.Invalidation.Id'</span>
IALJ5AL93ZD79
</code></pre></div></div>

<h4 id="check-cache-invalidation-status">Check Cache Invalidation Status</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudfront get-invalidation <span class="nt">--distribution-id</span> D12B09E8A0A996 <span class="nt">--id</span> IALJ5AL93ZD79 | jq <span class="nt">-r</span> <span class="s1">'.Invalidation.Status'</span>
Completed
</code></pre></div></div>

<h2 id="amplify">Amplify</h2>

<h4 id="list-of-amplify-apps-and-source-repository">List of Amplify Apps and Source Repository</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws amplify list-apps | jq <span class="nt">-r</span> <span class="s1">'.apps[] | .name+" "+.defaultDomain+" "+.repository'</span>
fe-vn  d9d5bb1e3c281f.amplifyapp.com  https://bitbucket.org/aws/frontend-vn
fe-hk  db64e7e9b3cc22.amplifyapp.com  https://bitbucket.org/aws/frontend-hk
fe-sg  d5e3221cf8b921.amplifyapp.com  https://bitbucket.org/aws/frontend-sg
</code></pre></div></div>

<h2 id="cognito">Cognito</h2>

<h4 id="list-of-user-pool-ids-and-names">List of User Pool IDs and Names</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cognito-idp list-user-pools <span class="nt">--max-results</span> 60 | jq <span class="nt">-r</span> <span class="s1">'.UserPools[] | .Id+" "+.Name'</span>
ap-southeast-1_b6da07d35 prod-users
ap-southeast-1_b6da07d34 dev-users
</code></pre></div></div>

<h4 id="list-of-phone-and-email-of-all-users">List of Phone and Email of All Users</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cognito-idp list-users <span class="nt">--user-pool-id</span> ap-southeast-1_b6da07d35 | jq <span class="nt">-r</span> <span class="s1">'.Users[].Attributes | from_entries | .sub + " " + .phone_number + " " + .email'</span>
585fb96e-525c-4f9b-9d41-865d2dffde9b +601122334455 admin@mdminhazulhaque.io
71f2778c-8e21-4775-94dc-e363c77d1ae1 +601122334455 foo@bar.com
8fc1882e-e661-49db-88e6-45d370bc352a +601122334455 cli@aws.com
</code></pre></div></div>

<h2 id="iam-user">IAM User</h2>

<h4 id="list-of-userid-and-username">List of UserId and UserName</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-users | jq <span class="nt">-r</span> <span class="s1">'.Users[]|.UserId+" "+.UserName'</span>
AIDAZBWIOJIQFOLNBXXCVSUQ kaiser
AIDAZCTWYVXYOKSHVWXPYPLR thornton
AIDAZUYALCGFQJENBCZFJTVX maldonado
AIDAZKQAFIGQJWOKKSKRBLGE key
AIDAZXUDGQVQCEWBFGIJOWWY nelson
</code></pre></div></div>

<h4 id="get-single-user">Get Single User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam get-user <span class="nt">--user-name</span> kaiser
</code></pre></div></div>

<h4 id="add-user">Add User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam create-user <span class="nt">--user-name</span> audit-temp
</code></pre></div></div>

<h4 id="delete-user">Delete User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam delete-user <span class="nt">--user-name</span> audit-temp
</code></pre></div></div>

<h4 id="list-access-keys-for-user">List Access Keys for User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-access-keys <span class="nt">--user-name</span> audit-temp | jq <span class="nt">-r</span> .AccessKeyMetadata[].AccessKeyId
AKIABWIOJIQFOLNBXXCVSUQ
AKIACTWYVXYOKSHVWXPYPLR
AKIAUYALCGFQJENBCZFJTVX
</code></pre></div></div>

<h4 id="delete-access-key-for-user">Delete Access Key for User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam delete-access-key <span class="nt">--user-name</span> audit-temp <span class="nt">--access-key-id</span> AKIABWIOJIQFOLNBXXCVSUQ
</code></pre></div></div>

<h4 id="activatedeactivate-access-key-for-user">Activate/Deactivate Access Key for User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam update-access-key <span class="nt">--status</span> Inactive <span class="nt">--user-name</span> audit-temp <span class="nt">--access-key-id</span> AKIABWIOJIQFOLNBXXCVSUQ
aws iam update-access-key <span class="nt">--status</span> Active   <span class="nt">--user-name</span> audit-temp <span class="nt">--access-key-id</span> AKIABWIOJIQFOLNBXXCVSUQ
</code></pre></div></div>

<h4 id="generate-new-access-key-for-user">Generate New Access Key for User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam create-access-key <span class="nt">--user-name</span> audit-temp | jq <span class="nt">-r</span> <span class="s1">'.AccessKey | .AccessKeyId+" "+.SecretAccessKey'</span>
AKIABWIOJIQFOLNBXXCVSUQ p9ge02ebLX9jobdQKmfikRqCiEw3HBylwHyXq0z
</code></pre></div></div>

<h2 id="iam-group">IAM Group</h2>

<h4 id="list-groups">List Groups</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-groups | jq <span class="nt">-r</span> .Groups[].GroupName
developers
administrators
testers
marketing-ro
</code></pre></div></div>

<h4 id="adddelete-groups">Add/Delete Groups</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam create-group <span class="nt">--group-name</span> business-ro
aws iam delete-group <span class="nt">--group-name</span> business-ro
</code></pre></div></div>

<h4 id="list-of-policies-and-arns">List of Policies and ARNs</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-policies               | jq <span class="nt">-r</span> <span class="s1">'.Policies[]|.PolicyName+" "+.Arn'</span>
aws iam list-policies <span class="nt">--scope</span> AWS   | jq <span class="nt">-r</span> <span class="s1">'.Policies[]|.PolicyName+" "+.Arn'</span>
aws iam list-policies <span class="nt">--scope</span> Local | jq <span class="nt">-r</span> <span class="s1">'.Policies[]|.PolicyName+" "+.Arn'</span>
</code></pre></div></div>

<h4 id="list-of-usergrouproles-for-a-policy">List of User/Group/Roles for a Policy</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-entities-for-policy <span class="nt">--policy-arn</span> arn:aws:iam::987654321:policy/Marketing-ReadOnly
</code></pre></div></div>

<h4 id="list-policies-for-a-group">List Policies for a Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-attached-group-policies <span class="nt">--group-name</span> business-ro
</code></pre></div></div>

<h4 id="add-policy-to-a-group">Add Policy to a Group</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam attach-group-policy --group-name business-ro --policy-arn arn:aws:iam::aws:policy/DynamoDBReadOnlyAccess
</code></pre></div></div>

<h4 id="add-user-to-a-group">Add User to a Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam add-user-to-group <span class="nt">--group-name</span> business-ro <span class="nt">--user-name</span> marketing-michael
</code></pre></div></div>

<h4 id="remove-user-from-a-group">Remove User from a Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam remove-user-from-group <span class="nt">--group-name</span> business-ro <span class="nt">--user-name</span> marketing-alice
</code></pre></div></div>

<h4 id="list-users-in-a-group">List Users in a Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam get-group <span class="nt">--group-name</span> business-ro
</code></pre></div></div>

<h4 id="list-groups-for-a-user">List Groups for a User</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam list-groups-for-user <span class="nt">--user-name</span> qa-bob
</code></pre></div></div>

<h4 id="attachdetach-policy-to-a-group">Attach/Detach Policy to a Group</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws iam detach-group-policy <span class="nt">--group-name</span> business-ro <span class="nt">--policy-arn</span> arn:aws:iam::aws:policy/DynamoDBFullAccess
aws iam attach-group-policy <span class="nt">--group-name</span> business-ro <span class="nt">--policy-arn</span> arn:aws:iam::aws:policy/DynamoDBFullAccess
</code></pre></div></div>]]></content><author><name></name></author><category term="aws" /><summary type="html"><![CDATA[I heavily rely on CLI tools rather than GUI/Web interface. AWS CLI is a great tool to manage AWS resources across different accounts, regions and environments.]]></summary></entry><entry><title type="html">Create Breadcrumb in Jekyll</title><link href="https://bits.mdminhazulhaque.io/jekyll/create-breadcrumb-in-jekyll.html" rel="alternate" type="text/html" title="Create Breadcrumb in Jekyll" /><published>2019-09-14T00:00:00+06:00</published><updated>2019-09-14T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/jekyll/create-breadcrumb-in-jekyll</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/jekyll/create-breadcrumb-in-jekyll.html"><![CDATA[<p><a href="https://developers.google.com/search/docs/data-types/breadcrumb">Breadcrumb</a> is a technique to show the level of your page so the user can browse any level directly, even from the Google search page. Also, the breadcrumb snippet must be put in the head tag of the HTML if you want to use the JSON-LD format.</p>

<p>My blog uses the URL pattern - <code class="language-plaintext highlighter-rouge">&lt;base&gt;/&lt;category&gt;/&lt;post&gt;</code>.</p>

<p>For example,</p>

<ol>
  <li>https://bits.mdminhazulhaque.io</li>
  <li>https://bits.mdminhazulhaque.io/linux</li>
  <li>https://bits.mdminhazulhaque.io/linux/authenticate-fluentd-to-access-bigquery.html</li>
</ol>

<p>Now the challange is to generate a JSON file based on the page type or level. For my case,</p>

<ul>
  <li>Level 1: The home page use <code class="language-plaintext highlighter-rouge">layout: default</code></li>
  <li>Level 2: The category pages use <code class="language-plaintext highlighter-rouge">layout: category</code></li>
  <li>Level 3: The post pages use <code class="language-plaintext highlighter-rouge">layout: post</code></li>
</ul>

<p>In Jekyll, I did not find any easy method to generate breadcrumb. Also it was nowhere written how can I know the level of page. So I had to apply some trick. It was - to use the <code class="language-plaintext highlighter-rouge">layout.type</code> variable in <code class="language-plaintext highlighter-rouge">_includes/head.html</code>.</p>

<p>Here is my <code class="language-plaintext highlighter-rouge">_includes/head.html</code> code that generates breadcrumb snippet (and title also) based on the page type.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;head&gt;
  &lt;meta http-equiv="..." content="..."&gt;
  &lt;meta name="..." content="..."&gt;
  &lt;script type="application/ld+json"&gt;{
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Home",
      "item": "{{ site.url }}/"
    }{% if layout.type == "category" %},{
      "@type": "ListItem",
      "position": 2,
      "name": "{{ page.title }}",
      "item": "{{ site.url }}/{{ page.title }}"
    }{% endif %}{% if layout.type == "post" %},{
      "@type": "ListItem",
      "position": 2,
      "name": "{{ page.category }}",
      "item": "{{ site.url }}/{{ page.category }}"
    },{
      "@type": "ListItem",
      "position": 3,
      "name": "{{ page.title }}",
      "item": "{{ site.url }}/{{ page.url }}"
    }{% endif %}]
  }&lt;/script&gt;
  &lt;title&gt;
    {% if layout.type == "category" %}
        Posts tagged in #{{ page.title }}
    {% else %}
        {{ page.title }}
    {% endif %} | {{ site.title }}&lt;/title&gt;
&lt;/head&gt;
</code></pre></div></div>

<p>The result also looks as I expected.</p>

<p><img src="https://i.imgur.com/YCnUuyp.png" alt="Breadcrumb using Jekyll" /></p>

<blockquote>
  <p>The source code of my blog can be downloaded from <a href="https://github.com/mdminhazulhaque/bits">mdminhazulhaque/bits</a></p>
</blockquote>

<p>Let me know if there is any better way to achieve this thing. Thanks.</p>]]></content><author><name></name></author><category term="jekyll" /><summary type="html"><![CDATA[Breadcrumb is a technique to show the level of your page so the user can browse any level directly, even from the Google search page. Also, the breadcrumb snippet must be put in the head tag of the HTML if you want to use the JSON-LD format.]]></summary></entry><entry><title type="html">Tweak your Bee IPTV Box with 3rd Party App and Launcher</title><link href="https://bits.mdminhazulhaque.io/android/tweak-your-bee-iptv-box-with-3rd-party-app-and-launcher.html" rel="alternate" type="text/html" title="Tweak your Bee IPTV Box with 3rd Party App and Launcher" /><published>2019-05-30T00:00:00+06:00</published><updated>2019-05-30T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/android/tweak-your-bee-iptv-box-with-3rd-party-app-and-launcher</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/android/tweak-your-bee-iptv-box-with-3rd-party-app-and-launcher.html"><![CDATA[<p>Yesterday, I got a call from one of my colleagues (and also my neighbor) about how he messed up with his Android TV Box. He asked me if I could help him with that to make it <strike>great</strike> useful again.</p>

<p>Basically he bought the box with a subscription long ago. After it got expired, the startup app kept complaining about the subscription. He did perform a factory reset which caused the box loose its realm. As a result, it was no way useful for him other than throwing it away or tweak it.</p>

<p>After I got the box in my hands, first thing I tried is looking for it’s model or chip number. I got <code class="language-plaintext highlighter-rouge">OTT TV BOX</code> written at the bottom and <code class="language-plaintext highlighter-rouge">beeiptv</code> on the top. Searching those keys gave me no idea, so I turned it on and plugged it into my TV.</p>

<p>The box booted real fast and the vendor-locked <code class="language-plaintext highlighter-rouge">beeiptv</code> app appeared with error messages something like this. Not to mention, I made sure it had internet connection via Ethernet.</p>

<blockquote>
  <p>Failed connecting to middleware service A.B.C.D. Please check your internet connectivity or contact network admin.</p>
</blockquote>

<p>Again, it gave me no clue. So I plugged in an USB mouse and manually checked the device status page. It revealed the build number, kernel version etc. I was laughing to see that the developer could only mod the <code class="language-plaintext highlighter-rouge">Model Number</code>, nothing else.</p>

<p><img src="https://i.imgur.com/FI2bzOq.png" alt="Device Info Bee IPTV" /></p>

<p>Anyway, the board version <code class="language-plaintext highlighter-rouge">rk322x</code> indicated that it uses Rockchip SoC. I had never worked with Rockchip, but they are damn famous for low cost STB and other IoT devices. I had an idea in my mind. I checked the <code class="language-plaintext highlighter-rouge">Developer Settings</code> and found that the <code class="language-plaintext highlighter-rouge">USB Debugging</code> option was already turned on. But I had no such cable that could connect the USB-Female port of the box to my computer’s similar one. So I kept looking for alternatives.</p>

<p>Long ago I used to work with Android when the <code class="language-plaintext highlighter-rouge">adb</code> tool came handy. <code class="language-plaintext highlighter-rouge">adb</code> can connect over the wifi also. So I though I should give it a try for the box too. Then I got the box’s IP from my router’s DHCP table. Then ran this command in the terminal.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb connect 192.168.0.122:5555 # adb uses this port by default
</code></pre></div></div>

<p>Viola! It got connected. Another wonder was waiting for me. After trying <code class="language-plaintext highlighter-rouge">adb shell</code> I typed <code class="language-plaintext highlighter-rouge">su</code> and it worked too! That means I can do whatever I want with this box until it does. Yeee!!!</p>

<p>Okay back to the business. From the behaviors of the default, vendor-locked launcher app, I guessed it prohibits any other app to be used as a launcher. Plus there was no way to access the App Drawer. So I decided to get benefit from <code class="language-plaintext highlighter-rouge">adb</code> again.</p>

<p>I downloaded 2 APK from the internet. You might ask why this specific two. Well, the box runs Android 4.4 which is way old than todays. So make sure you check the Android version compatibility before installing any app.</p>

<ul>
  <li>com.swiftstreamz.live (For 3rd party live TV service)</li>
  <li>by.mediatech.home (For launcher/app drawer)</li>
</ul>

<p>I used the command <code class="language-plaintext highlighter-rouge">adb install &lt;apkfile&gt;</code>. Both of them got installed without any error. Then I tried starting the 3rd party TV app via adb.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>am start -e name Splash -n com.swiftstreamz.live/.MainActivity
</code></pre></div></div>

<p>It worked! I could see the new app interface in my TV. This gave my confidence a boost. So I decided to start the launcer too.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>am start -e name Splash -n by.mediatech.home/.MainActivity
</code></pre></div></div>

<p>After having success with installing and running those apps, I knew I had only one challenge left ahead of me.</p>

<ol>
  <li>Bypass the vendor-locked launcer and use the new one installed by me</li>
</ol>

<p>I googled around a bit and found that Android let’s you reset default launcher settings if you long tap the <code class="language-plaintext highlighter-rouge">Home</code> button for 6 seconds. I did it and set the <code class="language-plaintext highlighter-rouge">TVHome</code> app as default. When the launcher came, I could see all the applications installed in a row.</p>

<p><img src="https://i.imgur.com/eskp7sG.jpg" alt="New TV Home App" /></p>

<p>Before celebrating my success, I did some extra tweaks.</p>

<ul>
  <li>Disabled key press sound to make things faster</li>
  <li>Disabled autolock screen</li>
  <li>
    <p>Disabled the following packages using <code class="language-plaintext highlighter-rouge">pm disable &lt;pkg&gt;</code></p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">com.android.htmlviewer</code> # Won’t do any WebDev thingy</li>
      <li><code class="language-plaintext highlighter-rouge">com.android.inputmethod.pinyin</code> # Don’t need Chinese input</li>
      <li><code class="language-plaintext highlighter-rouge">com.android.printspooler</code> # Never going to print anything</li>
      <li><code class="language-plaintext highlighter-rouge">com.android.providers.downloads.ui</code> # Ugly download button</li>
      <li>`com.android.providers.userdictionary</li>
      <li><code class="language-plaintext highlighter-rouge">com.android.stk</code> # SIM Toolkit support</li>
      <li><code class="language-plaintext highlighter-rouge">com.corpus.stb.beeiptv</code> # So the vendor gets no chance to complain again</li>
      <li><code class="language-plaintext highlighter-rouge">com.google.android.googlequicksearchbox</code> # I always hated this search app</li>
      <li><code class="language-plaintext highlighter-rouge">com.svox.pico</code> # WTF</li>
      <li><code class="language-plaintext highlighter-rouge">com.zidoo.ota.update</code> # Update might reset all my hardwork, so be safe</li>
      <li><code class="language-plaintext highlighter-rouge">com.zidoo.test</code> # Seems suspicious</li>
    </ul>
  </li>
  <li>Set the animation speed to 0x to boost performance</li>
</ul>

<p>Finally, I restarted the box several times to see if the custom launcher appears after boot everytime. Also checked the streaming apps, YouTube apps too. All of them worked like a charm!</p>]]></content><author><name></name></author><category term="android" /><summary type="html"><![CDATA[Yesterday, I got a call from one of my colleagues (and also my neighbor) about how he messed up with his Android TV Box. He asked me if I could help him with that to make it great useful again.]]></summary></entry><entry><title type="html">Authenticate Fluentd to Access BigQuery</title><link href="https://bits.mdminhazulhaque.io/linux/authenticate-fluentd-to-access-bigquery.html" rel="alternate" type="text/html" title="Authenticate Fluentd to Access BigQuery" /><published>2019-05-08T00:00:00+06:00</published><updated>2019-05-08T00:00:00+06:00</updated><id>https://bits.mdminhazulhaque.io/linux/authenticate-fluentd-to-access-bigquery</id><content type="html" xml:base="https://bits.mdminhazulhaque.io/linux/authenticate-fluentd-to-access-bigquery.html"><![CDATA[<p>Fluentd is a pretty good log collection and streaming solution for several platforms. You can easily stream your nginx logs to BigQuery via Fluentd.</p>

<p>There is a nicely written article on <a href="https://cloud.google.com/solutions/real-time/fluentd-bigquery">Analyzing logs in real time using Fluentd and BigQuery</a> by Google. This guide has everything explained properly to get started with Fluentd-nginx-BigQuery.</p>

<p>I followed the whole process but ended up receiving the following error at <code class="language-plaintext highlighter-rouge">/var/log/td-agent/td-agent.log</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2019-05-07 16:13:15 +0000 [error]: #0 tables.get API project_id="farm-rock-85697" dataset="fluentd" table="nginx_access" code=403 message="accessDenied: Access Denied: Table farm-rock-85697:fluentd.nginx_access: The user 87674165174597-compute@developer.gserviceaccount.com does not have bigquery.tables.get permission for table farm-rock-85697:fluentd.nginx_access."
2019-05-07 16:13:15 +0000 [warn]: #0 emit transaction failed: error_class=RuntimeError error="failed to fetch schema from bigquery" location="/opt/td-agent/embedded/lib/ruby/gems/2.4.0/gems/fluent-plugin-bigquery-2.1.0/lib/fluent/plugin/out_bigquery_base.rb:190:in `fetch_schema'" tag="nginx.access"
</code></pre></div></div>

<p>What I guessed was that Fluentd could not access BigQuery table on GCP. Obviously it could not anyway because I had not authenticated <code class="language-plaintext highlighter-rouge">gcloud</code> in the VM. I tried authenticating <code class="language-plaintext highlighter-rouge">gcloud</code> tool from <code class="language-plaintext highlighter-rouge">td-agent</code> user but failed as <code class="language-plaintext highlighter-rouge">td-agent</code> has no valid shell. Also I tried the same for <code class="language-plaintext highlighter-rouge">root</code>, but did not help.</p>

<p>Finally after one day of searching over the internet, I got some clue about putting JSON files in somewhere so the <code class="language-plaintext highlighter-rouge">fluent-plugin-bigquery</code> can read it.</p>

<p>Go to <a href="https://console.cloud.google.com/apis/credentials">Google Cloud Platform &gt; APIs &amp; Services</a>. Then click on <code class="language-plaintext highlighter-rouge">Credentials</code> and hit on the <code class="language-plaintext highlighter-rouge">Create Credentials</code> button. Choose <code class="language-plaintext highlighter-rouge">Service Account Key</code> from the combo box. This will open a new page where you have to fill the credential name, roles etc.</p>

<p><img src="https://i.imgur.com/Gbkrc6c.png" alt="Credential-Page" /></p>

<p>Now setup a name for this service, set correct access in Roles (i.e. BigQuery Insert) and select <code class="language-plaintext highlighter-rouge">JSON</code> as type. Click <code class="language-plaintext highlighter-rouge">Create</code>.</p>

<p><img src="https://i.imgur.com/uUXb2DZ.png" alt="Role-Type-Page" /></p>

<p>After creating the credentials, you will be able to download the file. Now open up <code class="language-plaintext highlighter-rouge">/etc/td-agent/td-agent.conf</code> in your VM and change the following lines.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  auth_method json_key
  json_key /etc/td-agent/gcloud.json
</code></pre></div></div>

<p>Not to mention that you must copy the newly downloaded JSON file to your VM as <code class="language-plaintext highlighter-rouge">gcloud.json</code>. The whole <code class="language-plaintext highlighter-rouge">nginx.access</code> block should look something similar to this.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;match nginx.access&gt;

  @type bigquery_insert

  &lt;buffer&gt;
   flush_interval 0.1
    total_limit_size 10g
    flush_thread_count 16
  &lt;/buffer&gt;

  auth_method json_key
  json_key /etc/td-agent/gcloud.json

  project "farm-rock-85697:api-project-1587663"
  dataset nginx
  tables www_imoney_my

&lt;/match&gt;
</code></pre></div></div>

<p>Now restart <code class="language-plaintext highlighter-rouge">td-agent</code> using <code class="language-plaintext highlighter-rouge">systemctl</code> and check <code class="language-plaintext highlighter-rouge">/var/log/td-agent/td-agent.log</code>. You can see records are successfully being inserted into BigQuery if all the credentials, roles, project, dataset and table configuration is correct.</p>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[Fluentd is a pretty good log collection and streaming solution for several platforms. You can easily stream your nginx logs to BigQuery via Fluentd.]]></summary></entry></feed>